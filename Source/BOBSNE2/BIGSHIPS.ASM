bigship1: dw $0,$7500,$7878,$7f76,$289f,$9f7f,$3,$779,$7500,$9f7b,$7b01,$9f9f dw $7b,$0,$3,$6f0,$c18,$1848,$30a8,$7938,$9f7f,$c17b,$853,$58 dw $7f79,$7f7f,$d79,$3d10,$9f7b,$817,$805,$1e,$86e,$617f,$a0f8,$2850 dw $a29f,$7b08,$7778,$7778,$7970,$855,$104e,$50,$7675,$7f7b,$796f,$101b dw $1021,$5c7f,$1208,$be00,$7500,$ed00,$86c,$74,$ca,$1479,$1908,$9f00 dw $38a0,$7908,$8e8d,$857b,$7910,$7775,$780d,$9f76,$5d9f,$5700,$7b08,$a5 dw $7917,$8a9f,$80d,$c376,$5c00,$1900,$be20,$119,$237f,$6710,$cb10,$c120 dw $e730,$9f00,$6d0d,$101,$301,$600,$6e18,$5d,$3c9f,$9f30,$9f9a,$4800 dw $2728,$3250,$b948,$c000,$3111,$86e,$2e12,$462f,$2f2f,$390b,$2f2f,$32f dw $4d00,$a036,$6a,$2e43,$24,$9c3,$909,$3,$1806,$185c,$1033,$c212 dw $c208,$3329,$1209,$72,$4460,$3547,$b447,$5c4a,$4b0f,$4c5c,$57cf,$5f18 dw $e28,$6c20,$710,$60dd,$6060,$429,$700,$600,$9818,$180d,$7f12,$15a dw $3990,$757f,$412,$c3c,$c54,$454,$4000,$241,$4141,$ff41,$2041,$807 dw $741,$4241,$c0c,$30c,$600,$c18,$6a38,$d29,$2450,$1210,$263,$3278 dw $7942,$4d04,$10e1,$1010,$3,$5010,$c11b,$c1c1,$3,$1006,$1452,$1b20 dw $b320,$280e,$d43,$3850,$5d10,$b69e,$9202,$839,$7976,$9a9f,$268,$799d dw $d79f,$17d,$1c8,$89f,$9e08,$aea,$ae3,$11bf,$2dbf,$8d0a,$21d,$22e dw $80e,$2b,$2a4,$80d,$1af6,$4c1a,$920a,$d139,$7902,$268,$a70,$5076 dw $917b,$7602,$a94,$7678,$7e7e,$7b7e,$1293,$28a,$a99,$2f1,$9ed,$2e1 dw $768d,$8f8e,$5002,$a508,$7b02,$263,$101e,$e076,$2b54,$aa8,$1a4f,$7979 dw $7b8a,$ff7b,$ac5,$b2b,$b37,$24c,$960,$b3b,$27f,$12e0,$e1af,$8a0a dw $b9c,$9375,$a90a,$ec12,$a412,$933b,$13c2,$7f8a,$825,$9a79,$50,$b27 dw $2bfb,$b103,$d308,$3503,$f61b,$8a02,$330,$336,$e29f,$9f00,$9e9a,$ef13 dw $6502,$dd08,$6408,$7f03,$f476,$15fb,$37fc,$59fc,$7bfc,$9dfc,$bffc,$80fc dw $34e1ebigship1:bigship2: dw $2,$7500,$7575,$38c,$8c00,$3e1,$b00,$1220,$7500,$0,$300,$ff00 dw $1806,$480c,$a818,$3830,$1840,$844,$848,$57,$51fd,$1510,$5b18,$2010 dw $6118,$50f8,$8c48,$89d,$4aff,$4d18,$4b20,$6e28,$6440,$7b40,$8910,$d150 dw $8330,$8e7,$9d9c,$9d9f,$49f,$808,$fc10,$50af,$40a8,$7070,$10cb,$2122 dw $38f0,$8c75,$8b0c,$101,$301,$600,$118,$fe01,$505d,$869,$581f,$582d dw $83b,$925,$4050,$75,$128b,$462d,$4400,$5747,$7f02,$2d,$3656,$3e4d dw $2d80,$2d3d,$32d,$600,$c18,$1848,$1218,$51c1,$a080,$1208,$442d,$3436 dw $5628,$450d,$2d2d,$3b46,$50d8,$8a98,$50f0,$8c40,$8a0,$7f55,$2d68,$4755 dw $4700,$4536,$4140,$ff41,$b41,$4120,$4241,$6894,$600,$c18,$b030,$10 dw $1500,$400,$0,$1200,$c38a,$26f,$50f2,$104d,$1010,$3,$806,$5001 dw $5151,$5151,$5251,$3811,$1bee,$1438,$3988,$5d08,$50,$41e2,$2d3,$f79 dw $7c7a,$7c7a,$804,$8,$12d2,$4010,$1aef,$1438,$3888,$7b08,$b13,$4232 dw $231b,$2009,$5aff,$2232,$381a,$e91b,$741a,$4e22,$b413,$522,$ff33,$49e2 dw $2b68,$2036,$6ad3,$3013,$2076,$434d,$3b06,$50ff,$fd50,$fe6a,$8c22,$8653 dw $dc43,$5522,$403b,$fe49,$fbfc,$fc1e,$fc40,$fc62,$fc84,$fca6,$fcc8; end of fileebigship2:bigship3: dw $0,$7500,$7878,$7f76,$289f,$9f7f,$3,$779,$7500,$9f7b,$7b01,$9f9f dw $7b,$0,$3,$6f0,$c18,$1848,$30a8,$7938,$9f7f,$c17b,$853,$58 dw $7f79,$7f7f,$d79,$3d10,$9f7b,$817,$805,$1e,$86e,$617f,$a0f8,$2850 dw $a29f,$7b08,$7778,$7778,$7970,$855,$104e,$50,$7675,$7f7b,$796f,$101b dw $1021,$5c7f,$1208,$be00,$7500,$ed00,$86c,$74,$ca,$1479,$1908,$9f00 dw $38a0,$a2c0,$8508,$7910,$7775,$7678,$689f,$5d9f,$5700,$7b08,$a5,$9f79 dw $bd8a,$80d,$c376,$5c00,$1900,$1920,$7f01,$1023,$67f0,$cb10,$c120,$e730 dw $9f00,$14c,$6c01,$301,$600,$5c18,$5d,$303c,$9a9f,$9fff,$6100,$2310 dw $2f48,$3248,$b908,$1100,$6e31,$5b08,$7f12,$4a49,$a03a,$b9a3,$c212,$c208 dw $f629,$933,$5050,$f9db,$7050,$5a7f,$9001,$7f39,$7540,$50a0,$4140,$41ff dw $4120,$4274,$fa32,$48a2,$263,$3278,$7942,$184d,$1010,$310,$600,$5018 dw $5151,$513b,$1152,$1d48,$1848,$5d90,$a5e,$3992,$760f,$9f79,$689a,$e02 dw $fb02,$ec11,$ff11,$163,$22e3,$11bf,$a2d,$29d,$2fa,$29d,$300,$33fd dw $d12,$1a08,$4c1a,$920a,$d139,$7902,$268,$70f1,$6f0a,$d102,$8901,$7e1a dw $7e7e,$1293,$8aff,$9902,$f10a,$ed02,$e109,$8f12,$5002,$a508,$6e02,$637b dw $1e02,$7610,$2b54,$aa8,$1a4f,$3f79,$8a79,$122d,$132b,$b37,$24c,$960 dw $b3b,$7feb,$e002,$e112,$8a0a,$b9c,$9375,$a90a,$e412,$12ec,$3ba4,$13c2 dw $7f8a,$825,$9a79,$c6fe,$7c0a,$2b03,$b103,$d308,$3503,$f61b,$8a02,$30e7 dw $3603,$e203,$9f00,$9e9a,$ef13,$6502,$df08,$8dd,$364,$f476,$15fb,$37fc dw $59fc,$7bfc,$e0fc,$fc9d,$fcbf,$34e1ebigship3:virusbgscr: dw $60f,$60d,$40d,$808,$1028,$2068,$ffe8,$f840,$f862,$f884,$f8a6,$f8c8 dw $f8ea,$f90c,$f92e,$50c1,$72f9,$6f9,$d,$10d,$198,$300,$40d,$40d dw $34d,$c04d,$f9a4,$59c6,$d02,$d20,$d21,$2200,$230d,$240d,$240d,$4d dw $4d23,$4d22,$4d21,$4d20,$240,$f848,$70d,$80d,$90d,$d00,$d0a,$d0b dw $d0c,$d,$e0d,$f0d,$f0d,$e4d,$4d00,$4d0d,$4d0c,$4d0b,$20a,$94d dw $84d,$74d,$b08e,$25,$260d,$270d,$280d,$290d,$d00,$d2a,$d2b,$d2c dw $2d,$2e0d,$2f0d,$2f0d,$2e4d,$4d00,$4d2d,$4d2c,$4d2b,$2a,$294d,$284d dw $274d,$264d,$4d20,$d225,$4370,$440d,$450d,$d00,$d46,$d47,$d48,$49 dw $4a0d,$4b0d,$4c0d,$4d0d,$d00,$d4e,$d4f,$4d4f,$4e,$4d4d,$4c4d,$4b4d dw $4a4d,$4d00,$4d49,$4d48,$4d47,$246,$454d,$444d,$434d,$4116,$62,$630d dw $640d,$650d,$660d,$d00,$d67,$d68,$d69,$6a,$6b0d,$6c0d,$6d0d,$6e0d dw $d00,$d6f,$4d6f,$4d6e,$6d,$6c4d,$6b4d,$6a4d,$694d,$4d20,$4068,$6600 dw $654d,$644d,$4d20,$5663,$1241,$130d,$140d,$d00,$d15,$d16,$d17,$18 dw $190d,$1a0d,$1b0d,$1c0d,$d00,$d1d,$d1e,$d1f,$1f,$1e4d,$1d4d,$1c4d dw $1b4d,$4d00,$4d1a,$4d19,$4d18,$17,$164d,$154d,$144d,$134d,$4d20,$9812 dw $3011,$310d,$320d,$d00,$d33,$d34,$d35,$36,$370d,$380d,$390d,$3a0d dw $d00,$d3b,$d3c,$d3d,$3e,$3f0d,$3f0d,$3e4d,$3d4d,$4d00,$4d3c,$4d3b dw $4d3a,$39,$384d,$374d,$364d,$354d,$4d00,$4d34,$4d33,$4d32,$31,$304d dw $504d,$510d,$520d,$d00,$d53,$d54,$d55,$56,$570d,$580d,$590d,$5a0d dw $d00,$d5b,$d5c,$d60,$61,$5f0d,$5f0d,$614d,$604d,$4d00,$4d5c,$4d5b dw $4d5a,$59,$584d,$574d,$564d,$554d,$4d00,$4d54,$4d53,$4d52,$51,$504d dw $704d,$710d,$720d,$d00,$d73,$d74,$d75,$40,$410d,$780d,$790d,$7a0d dw $d00,$d7b,$d7c,$d7d,$7e,$7f0d,$7f0d,$7e4d,$7d4d,$4d00,$4d7c,$4d7b dw $4d7a,$79,$784d,$414d,$404d,$754d,$4d00,$4d74,$4d73,$4d72,$71,$704d dw $704d,$718d,$728d,$8d00,$8d73,$8d74,$8d75,$40,$418d,$788d,$798d,$7a8d dw $8d00,$8d7b,$8d7c,$8d7d,$7e,$7f8d,$7f8d,$7ecd,$7dcd,$cd00,$cd7c,$cd7b dw $cd7a,$79,$78cd,$41cd,$40cd,$75cd,$cd00,$cd74,$cd73,$cd72,$71,$70cd dw $50cd,$518d,$528d,$8d00,$8d53,$8d54,$8d55,$56,$578d,$588d,$598d,$5a8d dw $8d00,$8d5b,$8d5c,$8d60,$61,$5f8d,$5f8d,$61cd,$60cd,$cd00,$cd5c,$cd5b dw $cd5a,$59,$58cd,$57cd,$56cd,$55cd,$cd00,$cd54,$cd53,$cd52,$51,$50cd dw $30cd,$318d,$328d,$8d00,$8d33,$8d34,$8d35,$36,$378d,$388d,$398d,$3a8d dw $8d00,$8d3b,$8d3c,$8d3d,$3e,$3f8d,$3f8d,$3ecd,$3dcd,$cd00,$cd3c,$cd3b dw $cd3a,$39,$38cd,$37cd,$36cd,$35cd,$cd00,$cd34,$cd33,$cd32,$1031,$30cd dw $c0cd,$8d11,$8d13,$14,$158d,$168d,$178d,$188d,$8d00,$cd19,$8d1a,$8d1b dw $1c,$1d8d,$1e8d,$1f8d,$1f8d,$cd00,$cd1e,$cd1d,$cd1c,$1b,$1acd,$19cd dw $188d,$17cd,$cd00,$cd16,$cd15,$cd14,$3013,$12cd,$103c,$1240,$63cd,$648d dw $8d00,$8d65,$8d66,$8d67,$68,$698d,$6a8d,$6b8d,$6c8d,$8d00,$8d6d,$8d6e dw $8d6f,$6f,$6ecd,$6dcd,$6ccd,$6bcd,$cd00,$cd6a,$cd69,$cd68,$67,$66cd dw $65cd,$64cd,$63cd,$cd30,$4062,$c030,$8d02,$8d44,$45,$468d,$478d,$488d dw $498d,$8d00,$8d4a,$8d4b,$8d4c,$4d,$4e8d,$4f8d,$4f8d,$4ecd,$cd00,$cd4d dw $cd4c,$cd4b,$4a,$49cd,$48cd,$47cd,$46cd,$cd03,$cd45,$cd44,$3e43,$4040 dw $23,$268d,$278d,$288d,$298d,$8d00,$8d2a,$8d2b,$8d2c,$2d,$2e8d,$2f8d dw $2f8d,$2ecd,$cd00,$cd2d,$cd2c,$cd2b,$2a,$29cd,$28cd,$27cd,$26cd,$cd30 dw $3c25,$c070,$8d33,$8d08,$9,$a8d,$b8d,$c8d,$d8d,$8d00,$8d0e,$8d0f dw $cd0f,$e,$dcd,$ccd,$bcd,$acd,$cd03,$cd09,$cd08,$3c07,$40b0,$44 dw $208d,$218d,$228d,$238d,$8d00,$8d24,$cd24,$cd23,$322,$21cd,$20cd,$2cd dw $f83a,$664c,$301,$48d,$48d,$3cd,$f872,$84ff,$a6fe,$c8fe,$eafe,$cfe dw $2eff,$50ff,$72ff,$f0ff,$ff94,$ffb6,$ffd8,$17faevirusbgscr:** zap lightning for borg stuff*zaplocation:	dc.w	zapchar				dc.w	zapchar+(5*32)		dc.w	zapchar+(10*32)		dc.w	zapchar+(15*32)	zaplocation2:	dc.w	zapchar2	dc.w	zapchar2+(7*32)	dc.w	zapchar2+(14*32)	dc.w	zapchar2+(21*32)	zaplocation3a:	dc.w	$b000	dc.w	$b000+(8*32)	dc.w	$b000+(16*32)	dc.w	$b000+(24*32)	dc.w	$b000+(32*32)	dc.w	$b000+(40*32)	dc.w	$b000+(48*32)	dc.w	$b000+(56*32)	zaplocation3b:	dc.w	$b000+(64*32)	dc.w	$b000+(64*32)+(17*32)	dc.w	$b000+(64*32)+(34*32)	dc.w	$b000+(64*32)+(51*32)	dc.w	$b000+(64*32)+(68*32)	dc.w	$b000+(64*32)+(85*32)	dc.w	$b000+(64*32)+(102*32)	dc.w	$b000+(64*32)+(119*32)	dc.w	$b000+(64*32)+(136*32)	dc.w	$b000+(64*32)+(153*32)	dc.w	$b000+(64*32)+(170*32)	dc.w	$b000+(64*32)+(187*32)	dc.w	$b000+(64*32)+(204*32)	dc.w	$b000+(64*32)+(221*32)	dc.w	$b000+(64*32)+(238*32)	dc.w	$b000+(64*32)+(255*32)zaplocation3c:	dc.w	$b000+(336*32)	dc.w	$b000+(336*32)+(2*32)	dc.w	$b000+(336*32)+(4*32)	dc.w	$b000+(336*32)+(6*32)		animatezap2	lda	world	cmp	#2	beq	@doit	rtl@doit:@change:	phb	lda	#12	pha	plb		lda	doorcounter	lsr	a	and	#$fe	tay	lda	zaplocation3c,y	sta	tmp	iny	lda	zaplocation3c,y	sta	tmp+1		lda	#<32*2	sta	temp	lda	#>32*2	sta	temp+1	lda #<$2000+(384*16)	ldy #>$2000+(384*16)	bra	dadada	animatezap:	phb	lda	#12	pha	plb		lda	world	cmp	#2	beq	@world3		jmp	loweronexx	* * world 3 animation*@world3:	inc	zapcycle	lda	zapcycle	and	#1	beq	@change2@change1:	inc	doorcounter	lda	doorcounter	cmp	#16	bcc	@fine1	lda	#0	sta	doorcounter@fine1:	asl	a	tay	lda	zaplocation3b,y	sta	tmp	iny	lda	zaplocation3b,y	sta	tmp+1		lda	#<32*17	sta	temp	lda	#>32*17	sta	temp+1	lda #<$2000+(359*16)	ldy #>$2000+(359*16)	bra	dadada@change2:	inc	zapcounter	lda	zapcounter	cmp	#8	bcc	@fine2	lda	#0	sta	zapcounter@fine2:	asl	a	tay	lda	zaplocation3a,y	sta	tmp	iny	lda	zaplocation3a,y	sta	tmp+1		lda	#<32*8	sta	temp	lda	#>32*8	sta	temp+1	lda #<$2000+(376*16)	ldy #>$2000+(376*16)dadada:	sta VMADDL	sty VMADDH			lda	#%00000001	sta	$4300			; dma mode	lda	#<VMDATAWL		; which channel for DMA	sta	$4301			; b-bus addr	lda	#$7e	sta	$4304			; bank #		lda	tmp				;anim data lo	sta	$4302			; a-bus low addr	lda	tmp+1			;anim data hi	sta	$4303			; a-bus high addr		lda	temp			;(32*5) 	sta	$4305			; # of bytes low	lda temp+1	sta	$4306			; # of bytes high	lda	#1	sta	MDMAEN		; turn on dma	plb	rtl** world 1 and 2 animation*loweronexx:	inc	zapcycle	lda	zapcycle	and	#1	beq	@change	plb	rtl	@change:	inc	zapcounter	lda	zapcounter	cmp	#4	bcc	@fine	lda	#0	sta	zapcounter@fine:	ldy	world	cpy	#0	beq	@world1@world2:	asl	a	tay	lda	zaplocation2,y	sta	tmp	iny	lda	zaplocation2,y	sta	tmp+1		lda	#32*7	sta	temp	lda #<$2000+(243*16)	ldy #>$2000+(243*16)	bra	@restofit	@world1:	asl	a	tay	lda	zaplocation,y	sta	tmp	iny	lda	zaplocation,y	sta	tmp+1	lda	#(32*5)	sta	temp	lda #<$2000+(245*16)	ldy #>$2000+(245*16)@restofit:	sta VMADDL	sty VMADDH			lda	#%00000001	sta	$4300			; dma mode	lda	#<VMDATAWL		; which channel for DMA	sta	$4301			; b-bus addr	lda	#13	sta	$4304			; bank #		lda	tmp				;anim data lo	sta	$4302			; a-bus low addr	lda	tmp+1			;anim data hi	sta	$4303			; a-bus high addr		lda	temp			;(32*5) 	sta	$4305			; # of bytes low	lda #0	sta	$4306			; # of bytes high	lda	#1	sta	MDMAEN		; turn on dma	plb	rtl		** borg scootermine*scooterminemove:	dc.b	1,1,1,0,0,-1,-1,-1scootermines:	lda	#2	sta	PICscroll,x		lda	#5	sta	PICcolor,x	lda #1	sta PIChealth,x			lda	#12	sta	PICbank,x		lda	#11	sta	PICsize,x		stz	PICcollide,x		stz	PICcount,x		jsl	TSKsuspend		lda	PICcount,x	inc	a	sta	PICcount,x	and	#7	tay	lda	scooterminemove,y	jsl	PICxadd	lda	scooterminemove,y	jsl	PICyadd		lda	PICanim,x	inc	a	cmp	#3	bcc	@greeks	lda	#0@greeks:	sta	PICanim,x	asl	a	tay	lda	smineframes,y	sta	tmp	lda	smineframes+1,y	sta	tmp+1	jsl	PICput2		lda PICcollide,x	beq @mineok		lda #5			jsl justdrainstrengthl	lda #12			jml explode		@mineok:	rtl		smineframes:	dw	scootmine0	dw	scootmine1	dw	scootmine2scootmine0: dc.b $03 dc.b $88,$C8,$4E dc.b $D8,$C8,$4A dc.b $C8,$C8,$4Cscootmine1: dc.b $03 dc.b $88,$C8,$6E dc.b $D8,$C8,$6A dc.b $C8,$C8,$6Cscootmine2: dc.b $03 dc.b $88,$C8,$8E dc.b $D8,$C8,$8A dc.b $C8,$C8,$8C