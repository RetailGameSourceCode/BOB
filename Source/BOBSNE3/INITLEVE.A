** level specific tables and load routines*	for charsets,colors,blocks,maps*** level per level stuff* invpalnum	equ	5		;inventory screen informationinvscrnum	equ	4	possibletext:			;death	dc.b	34,35,42,36,43,56,57,58	dc.b	59,42,43,34,56,57,58,44	possibletext2:			;win	dc.b	37,33,38,40,45,48,49,29	slowdown:	dc.b	7,7,6,6,5,5,4,4,4,3,3	dc.b	2,2,2,2,1,1,1,1,1,1,0	bouncebob:	dc.b	-4,-3,-3,-2,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1	dc.b	0,0,1,1,1,1,1,1,1,1,1,2,2,2,3,3,4	dc.b	-2,-2,-1,-1,0	dc.b	1,1,2,2,99	leaveplanetx:	dc.b	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	dc.b	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	dc.b	0,1,0,0,1,0,1,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8	dc.b	8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,99leaveplanety:	dc.b	1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1	dc.b	0,0,1,0,0,1,0,0,1,0,0,1,0,0,1	dc.b	1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1	dc.b	0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1** which sounds to load*;borglevel		equ	0 ;buglevel		equ	1;spacelevel		equ	3;ancientlevel	equ	4;lavalevel		equ 6;ultralevel		equ	8;bubblelevel	equ	9;worldlevel		equ	10;worldlevel2	equ	11;worldlevel3	equ	12;borglevel2		equ	14animset:		;based on maptype	dc.b	0	;borg 	dc.b	4	;bug	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;ancient2	dc.b	0	;empty	dc.b	1	;lava	dc.b	0	;empty	dc.b	2	;ultra	dc.b	0	;bubble	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;borg 2	dc.b	3	;borg 3	dc.b	0	;door lifter	animsetchars:	dc.w	groundlava	dc.b	22,0	dc.w	ultraforceanim	dc.b	16,0	dc.w	borg3anim1	dc.b	4,0	dc.w	buglava	dc.b	11,0	eanimsetchars:	dc.w	egroundlava	dc.w	eultraforceanim	dc.w	eborg3anim1	dc.w	ebuglava	soundbank:		;based on maptype	dc.b	0	;borg 	dc.b	1	;bug	dc.b	0	;empty	dc.b	0	;empty	dc.b	2	;ancient2	dc.b	0	;empty	dc.b	2	;lava2	dc.b	0	;empty	dc.b	1	;ultra	dc.b	1	;bubble	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;empty	dc.b	0	;borg 2	dc.b	0	;borg 3whichthememusic:		;based on maptype	dc.b	borgtheme	;borg 	dc.b	bugtheme	;bug	dc.b	borgtheme	;empty	dc.b	borgtheme	;empty	dc.b	anctheme	;ancient2	dc.b	borgtheme	;empty	dc.b	anctheme	;lavatheme	;lava2	dc.b	borgtheme	;empty	dc.b	ultratheme	;ultra	dc.b	bubbletheme	;bubble	dc.b	borgtheme	;empty	dc.b	borgtheme	;empty	dc.b	borgtheme	;empty	dc.b	borgtheme	;empty	dc.b	borgtheme	;borg 2	dc.b	borgtheme	;borg 3	fightboss:		;also give password data	dc.b	0,0		;borg storage	dc.b	0,-1	;bug 1	dc.b	0,9		;borg outpost	dc.b	1,27	;popeye	dc.b	0,-1	;borg prison.	dc.b	0,-1	;bug map		dc.b	0,-1	;borg scooter	dc.b	0,24	;lava level	dc.b	0,-1	;space 2	dc.b	0,-1	;queen bug	dc.b	0,-1	;ultra 5	dc.b	0,23	;borg spaceport	dc.b	0,-1	;scooter 4	dc.b	1,-1	;queen map	dc.b	1,20	;borg snake boss	dc.b	0,-1	;borg step ladder	dc.b	0,-1	;borg big ladder	dc.b	1,-1	;borg spider boss	dc.b	0,-1	;borg house o beef	dc.b	0,-1	;borg elevator drop	dc.b	0,-1	;borg decision	dc.b	0,-1	;bug chambers	dc.b	0,6		;#22, bug26	dc.b	0,-1	;ancient temple 1	dc.b	0,-1	;ancient hourglass	dc.b	0,-1	;ancient vertical	dc.b	0,-1	;ancient planet 	dc.b	0,-1	;borg decision	dc.b	0,-1	;ancient rollo	dc.b	0,-1	;ancient hmmmm		dc.b	0,-1	;30,-1 borg tower	dc.b	1,-1	;ancient boss	dc.b	0,55	;lava map 66	dc.b	1,30	;lava boss	dc.b	0,35	;big ship 2		dc.b	0,-1	;ultra 1	dc.b	0,38	;bubble 1	dc.b 	0,49   ;ultra 3	dc.b	0,-1	;ultra 2		dc.b	0,-1	;world map1	dc.b	1,-1	;screen lifter	dc.b	0,-1	;world map 2	dc.b	0,-1	;world map 3	dc.b	0,-1	;bubble 2	dc.b	0,-1	;bubble 3	dc.b	0,-1	;titles	dc.b	0,-1	;intro	dc.b	0,-1	;scooter 3	dc.b	0,-1	;borg 32	dc.b	0,-1	;borg 33	dc.b	0,-1	;borg 34	dc.b	0,19	;lava map 99	dc.b	1,12	;puss boss	dc.b	1,47	;mutoid man	dc.b	1,-1	;ultra boss	dc.b	0,-1	;borg scooter 2	dc.b	0,-1	;ultra 4	dc.b	0,-1	;intro 2	dc.b	0,-1	;intro 3	dc.b	0,-1	;borg spaceport 3	parallaxtype:	dc.b	2	;borg storage 16	dc.b	6	;bug 1	dc.b	2	;borg outpost	dc.b	5	;popeye	dc.b	2	;borg prison	dc.b	6	;bug 2		dc.b	2	;borg scooter		dc.b	9	;lava level	dc.b	3	;space 2	dc.b	6	;queen bug	dc.b	11	;ultra 5	dc.b	2	;borg spaceport	dc.b	3	;scooter 4	dc.b	6	;queen map	dc.b	2	;borg snake boss	dc.b	16	;borg step ladder	dc.b	16	;borg big ladder	dc.b	2	;borg spider boss	dc.b	2	;borg house o beef	dc.b	16	;borg elevator drop	dc.b	2	;borg decision	dc.b	6	;bug chambers	dc.b	6	;bug26	dc.b	5	;ancient temple 1	dc.b	5	;ancient hourglass	dc.b	5	;ancient vertical	dc.b	5	;ancient planet	dc.b	16	;borg decision	dc.b	5	;ancient rollo	dc.b	5	;ancient hmmmm	dc.b	16	;30 borg tower	dc.b	5	;ancient boss	dc.b	9	;lava map66	dc.b	9	;lava boss	dc.b	16	;big ship 2			dc.b	11	;ultra 1	dc.b	8	;bubble 1	dc.b	11	;ultra 3	dc.b	11	;ultra 2		dc.b	10	;world map 1	dc.b	20	;screen lifter	dc.b	10	;world map 2	dc.b	10	;world map 3	dc.b	8	;bubble 2	dc.b	8	;bubble 3		dc.b	0	;titles	dc.b	0	;intro	dc.b	3	;scooter 3	dc.b	3	;borg 32	dc.b	3	;borg 33	dc.b	3	;borg 34	dc.b	9	;lava map 99	dc.b	11	;puss boss	dc.b	11	;mutoid man	dc.b	18	;ultra boss	dc.b	16	;borg scooter 2	dc.b	11	;ultra 4	dc.b	0	;intro 2	dc.b	0	;intro 3	dc.b	3	;borg spaceport 3		mapvstart:	dc.b	3	;borg storage	dc.b	2	;bug 1	dc.b	3	;borg outpost	dc.b	4	;popeye	dc.b	22	;borg prison	dc.b	4	;bug map		dc.b	2	;borg scooter	dc.b	44	;lava level	dc.b	82	;space 2	dc.b	25	;queen bug	dc.b	74	;ultra 5	dc.b	5	;borg spaceport	dc.b	82	;space flight	dc.b	2	;queen map	dc.b	3	;borg snake boss	dc.b	4+1	;borg step ladder	dc.b	59	;borg big ladder	dc.b	8	;borg spider boss	dc.b	5	;borg house o beef	dc.b	2	;borg elevator drop	dc.b	7	;borg decision	dc.b	3	;bug chambers	dc.b	4	;bug26		dc.b	6	;ancient temple #1	dc.b	82	;ancient hourglass	dc.b	6	;ancient vertical	dc.b	40	;ancient planet	dc.b	2	;borg decision	dc.b	0	;ancient rollo	dc.b	3	;ancient hmmmm	dc.b	106	;30 borg tower	dc.b	5	;ancient boss	dc.b	52	;lava map 66	dc.b	44	;lava boss	dc.b	5	;big ship 2		dc.b	5	;ultra 1	dc.b	28	;bubble 1	dc.b	4	;ultra 3	dc.b	4	;ultra 2		dc.b	0	;world map1	dc.b	8	;screen lifter	dc.b	0	;world map 2	dc.b	0	;world map 3		dc.b	31	;bubble 2	dc.b	40	;bubble 3			dc.b	0	;titles	dc.b	0	;intro	dc.b	10+1	;scooter 3	dc.b	22+1 ;borg 32	dc.b	10+1 ;borg33	dc.b	5+1	;borg 34	dc.b	4+1	;lava map 99	dc.b	4	;puss boss	dc.b	4	;mutoid man	dc.b	4	;ultra boss	dc.b	4	;borg scooter 2	dc.b	52	;ultra 4	dc.b	0	;intro 2	dc.b	0	;intro 3		dc.b	5	;borg spaceport 3	bobstartstate:	dc.b	#falling,27		;borg storeage	dc.b	#falling,60		;bug 1	dc.b	#falling,27		;borg outpost	dc.b	#falling,68		;puss man boss	dc.b	#falling,27		;borg prison	dc.b	#falling,27		;bug 2		dc.b	#-1,64			;borg scooter	dc.b	#falling,63		;lava level	dc.b	#0,29			;space 2	dc.b	#falling,67		;queen bug	dc.b	#falling,27		;ultra 5	dc.b	#-1,65			;borg spaceport	dc.b	#-1,64			;scooter 4	dc.b	#falling,63		;queen map	dc.b	#falling,61		;borg snake boss	dc.b	#falling,27		;borg step ladder	dc.b	#falling,60		;borg big ladder	dc.b	#falling,69		;borg spider boss	dc.b	#falling,66		;borg house o beef	dc.b	#falling,27		;borg elevator drop	dc.b	#falling,27		;borg decision	dc.b	#falling,62		;bug chambers	dc.b	#falling,27		;bug26		dc.b	#falling,63		;ancient temple #1	dc.b	#falling,27		;ancient hourglass	dc.b	#falling,69		;ancient vertical	dc.b	#falling,27		;ancient planet	dc.b	#falling,67		;borg decision	dc.b	#falling,27		;ancient rollo	dc.b	#falling,27		;ancient hmmmmmm		dc.b	#falling,27		;30 borg tower	dc.b	#falling,27		;ancient boss	dc.b	#falling,60		;lava map 66	dc.b	#falling,68		;lava boss	dc.b	#-1,65			;big ship 2			dc.b	#falling,62		;ultra 1	dc.b	#falling,61		;bubble 1	dc.b	#falling,27		;ultra 3	dc.b	#falling,63		;ultra 2	dc.b	#onworld,27		;world map 1	dc.b	#falling,67		;screen lifter	dc.b	#onworld,27		;world map 2	dc.b	#onworld,27		;world map 3	dc.b	#falling,27		;bubble 2	dc.b	#falling,66		;bubble 3		dc.b	#0,0			;titles	dc.b	#0,0			;intro	dc.b	#-1,64				;scooter 3	dc.b	#falling,29		;borg 32	dc.b	#falling,27		;borg 33	dc.b	#falling,66		;borg 34	dc.b	#falling,27		;lava map 99	dc.b	#falling,68		;puss boss	dc.b	#falling,62		;mutoid man	dc.b	#falling,27		;ultra boss	dc.b	#-1,64			;borg scooter 2	dc.b	#falling,27		;ultra 4	dc.b	#0,29			;intro 2	dc.b	#0,29			;intro 3	dc.b	#-1,65			;borg spaceport 3	whichsprites:	;good/bad sprites		dc.b	0,0				;borg storage	dc.b	0,1				;bug 1	dc.b	0,0				;borg outpost	dc.b	0,17			;popeye boss	dc.b	0,0				;borg prison	dc.b	0,1				;bug 2		dc.b	0,3				;borg scooter	dc.b	0,8				;laval level	dc.b	1,4				;space 2	dc.b	0,1				;ant hill bug 	dc.b	0,11			;ultra 5	dc.b	0,15			;spaceport borg 	dc.b	0,3				;scooter 4	dc.b	0,5				;queen map	dc.b	0,23			;borg snake boss	dc.b	0,0				;borg step ladder	dc.b	0,0				;borg big ladder	dc.b	0,0				;borg spider boss	dc.b	0,0				;borg house o beef	dc.b	0,0				;borg elevator drop	dc.b	0,0				;borg decision	dc.b	0,1				;bug chambers	dc.b	0,1				;bug 26	dc.b	0,7				;ancient temple #1	dc.b	0,7				;ancient hourglass	dc.b	0,7				;ancient vertical	dc.b	0,7				;ancient planet	dc.b	0,0				;borg decision	dc.b	0,7				;ancient rollo	dc.b	0,7				;ancient hmmmmmm	dc.b	0,0				;30 borg tower	dc.b	0,17			;ancient boss	dc.b	0,8				;lava map 66	dc.b	0,12			;lava boss	dc.b	0,16			;big ship 2		dc.b	0,11				;ultra 1	dc.b	0,10			;bubble 1	dc.b	0,11				;ultra 3	dc.b	0,11				;ultra 2		dc.b	3,18				;world map 1	dc.b	0,13			;screen lifter	dc.b	3,18				;world map 2	dc.b	3,18				;world map 3	dc.b	0,10			;bubble 2	dc.b	0,10			;bubble 3			dc.b	0,0				;titles	dc.b	0,0				;intro		dc.b	0,3				;scooter 3	dc.b	0,0				;borg 32	dc.b	0,0				;borg 33	dc.b	0,0				;borg 34	dc.b	0,8				;lava map 99				dc.b	0,20			;puss boss	dc.b	0,22			;mutoid men boss	dc.b	0,19			;ultra boss	dc.b	0,3				;borg scooter 2	dc.b	0,11			;ultra 4	dc.b	0,0				;intro 2	dc.b	0,0				;intro 3	dc.b	0,14			;borg spaceport 3	whichpalletes: ;sprite/bg	dc.b	0,0				;borg prison	dc.b	2,1				;bug	dc.b	14,14			;borg outpost	dc.b	35,4				;popeye	dc.b	15,15			;borg prison	dc.b	22,22			;bug 2		dc.b	16,16			;borg scooter	dc.b	5,6				;lava level	dc.b	1,3				;space 2	dc.b	23,23			;big bug	dc.b	18,19			;ultra 5	dc.b	31,0				;borg spaceport #1	dc.b	0,27			;scooter 4	dc.b	29,2			;queen map	dc.b	20,0			;borg snake boss	dc.b	0,17			;borg step ladder	dc.b	0,32			;borg big ladder	dc.b	0,0				;borg spider boss	dc.b	0,0				;borg house o beef	dc.b	0,17			;borg elevator drop	dc.b	0,0				;borg decision	dc.b	23,23			;bug chambers	dc.b	22,22			;bug26		dc.b	4,4				;ancient temple #1	dc.b	24,24			;ancient hourglass	dc.b	25,25			;ancient vertical	dc.b	26,26			;ancient planet	dc.b	0,17			;borg decision	dc.b	25,25			;ancient rollo	dc.b	24,24			;ancient hmmmm	dc.b	0,33			;30 borg tower	dc.b	4,21			;flower boss	dc.b	5,6				;lava map 66	dc.b	13,6				;lava boss	dc.b	32,34				;borg spaceport #2		dc.b	9,8				;ultra 1	dc.b	7,9				;bubble 1	dc.b	17,18			;ultra 3	dc.b	18,19			;ultra 2		dc.b	8,10			;world map 1	dc.b	10,31			;screen lifter	dc.b	27,11			;world map 2	dc.b	28,12			;world map 3		dc.b	36,28			;bubble 2	dc.b	37,29			;bubble 3		dc.b	0,13			;titles	dc.b	0,11			;intro		dc.b	0,27			;scooter 3	dc.b	0,27			;borg 32	dc.b	0,27			;borg 33		dc.b	0,27			;borg 34	dc.b	5,6				;lava map	dc.b	12,18			;puss boss	dc.b	21,19			;mutoid man	dc.b	34,30			;ultra boss	dc.b	0,17			;borg scooter 2	dc.b	19,20			;ultra 4	dc.b	0,31			;intro 2	dc.b	0,32			;intro 3	dc.b	11,27			;borg spaceport 3		whichtasklist:	dc.b	0				;borg prison	dc.b	1				;bug 1 	dc.b	0				;borg outpost	dc.b	2				;popeye	dc.b	0				;borg prision	dc.b	1				;bug 2		dc.b	0				;borg scooter	dc.b	2				;laval level	dc.b	3				;space 2	dc.b	1				;queen bug 	dc.b	4				;ultra 5	dc.b	0				;borg spaceport	dc.b	0				;scooter 4		dc.b	1				;queen map	dc.b	0				;borg snake boss	dc.b	0				;borg step ladder	dc.b	0				;borg big ladder	dc.b	0				;borg spider boss	dc.b	0				;borg house o beef	dc.b	0				;borg elevator drop	dc.b	0				;borg decision	dc.b	1				;bug chambers	dc.b	1				;bug26	dc.b	2				;ancient temple #1	dc.b	2				;ancient hourglass	dc.b	2				;ancient vertical	dc.b	2				;ancient planet	dc.b	0				;borg decision	dc.b	2				;ancient rollo	dc.b	2				;ancient hmmmmm	dc.b	0				;30 borg tower	dc.b	2				;ancient boss	dc.b	2				;lava map 66	dc.b	2				;lava boss	dc.b	0				;big ship 2		dc.b	4				;ultra 1	dc.b	4				;bubble 1	dc.b	4				;ultra 3	dc.b	4				;ultra 2		dc.b	5				;world map 1	dc.b	0				;screen lifter	dc.b	5				;world map 2	dc.b	5				;world map 3	dc.b	4				;bubble 2	dc.b	4				;bubble 3		dc.b	0				;titles	dc.b	0				;intro		dc.b	0				;scooter 3	dc.b	0				;borg 32	dc.b	0				;borg 33	dc.b	0				;borg 34	dc.b	2				;lava map 99	dc.b	4				;pussboss	dc.b	4				;mutoid man	dc.b	4				;ultra boss	dc.b	0				;borg scooter 2	dc.b	4				;ultra 4	dc.b	0				;intro 2	dc.b	0				;intro 3	dc.b	0				;borg spaceport 3	leveltime:	dc.b	5				;borg prison	dc.b	3				;bug 1 	dc.b	3				;borg outpost	dc.b	3				;popeye	dc.b	3				;borg prision	dc.b	5				;mega bug 	dc.b	1				;borg scooter	dc.b	3				;lava level	dc.b	3				;space 2	dc.b	5				;queen bug	dc.b	8				;ultra 5	dc.b	3				;borg spaceport	dc.b	3				;scooter 4	dc.b	5				;queen map	dc.b	5				;borg snake boss	dc.b	4				;borg step ladder	dc.b	4				;borg big ladder	dc.b	5				;borg spider boss	dc.b	5				;borg house o beef	dc.b	5				;borg elevator drop	dc.b	2				;borg decision	dc.b	3				;bug chambers	dc.b	4				;bug26	dc.b	3				;ancient temple #1	dc.b	5				;ancient hourglass	dc.b	3				;ancient vertical	dc.b	5				;ancient planet	dc.b	5				;borg decision	dc.b	3				;ancient rollo	dc.b	5				;ancient hmmm	dc.b	3				;30 borg tower	dc.b	3				;ancient boss	dc.b	3				;lava map 66	dc.b	3				;lava boss	dc.b	3				;big ship 2			dc.b	3				;ultra 1	dc.b	4				;bubble 1	dc.b	3				;ultra 3	dc.b	3				;ultra 2		dc.b	3				;world map 1	dc.b	3				;screen lifter	dc.b	3				;world map 2	dc.b	3				;world map 3	dc.b	4				;bubble 2	dc.b	5				;bubble 3		dc.b	0				;titles	dc.b	0				;intro	dc.b	-1				;scooter 3  -1:30	dc.b	4				;borg 32	dc.b	5				;borg 33	dc.b	7				;borg 34	dc.b	3				;lava map 99	dc.b	3				;pussboss	dc.b	3				;mutoid man	dc.b	5				;ultra boss	dc.b	3				;borg scooter 2	dc.b	4				;ultra 4	dc.b	0				;intro 2	dc.b	0				;intro 3	dc.b	3				;borg spaceport 3		** Background stuff*titlescreens:	dc.w	clearscreen		;address	dc.b	22,0				;bank,empty	dc.w	panelmap	dc.b	10,0	dc.w	borgpara	;2	dc.b	10,0	dc.w	borgpara3	;3	dc.b	11,0	dc.w	invenmap	dc.b	20,0	dc.w	ancpara	dc.b	2,0	dc.w	bugpara	dc.b	15,0	dc.w	logoscreen	;7	title screen	dc.b	19,0	dc.w	bubpara	dc.b	14,0	dc.w	lavapar	dc.b	24,0	dc.w	worldpara	dc.b	2,0	dc.w	ultrapara	dc.b	1,0	dc.w	dadhouse	;12 dad house	dc.b	22,0	dc.w	diner		;13 diner	dc.b	22,0	dc.w	introscr2	dc.b	11,0		dc.w	introscr3	dc.b	1,0	dc.w	borgpara2	dc.b	12,0	dc.w	creditscreen	;17 credits	dc.b	4,0	dc.w	virusbgscr		;virus parallax	dc.b	12,0	dc.w	creditscreen2	dc.b	4,0	dc.w	doorparallax	;20	dc.b	14,0	dc.w	endscreen		;21	dc.b	3,0		etitlescreens:	dc.w	eclearscreen	;$2008	dc.w	epanelmap	dc.w	eborgpara	dc.w	eborgpara3	dc.w	einvenmap	dc.w	eancpara	dc.w	ebugpara	dc.w	elogoscreen	dc.w	ebubpara	dc.w	elavapar	dc.w	eworldpara	dc.w	eultrapara	dc.w	edadhouse	dc.w	ediner	dc.w	eintroscr2	dc.w	eintroscr3	dc.w	eborgpara2	dc.w	ecreditscreen	dc.w	evirusbgscr	dc.w	ecreditscreen2	dc.w	edoorparallax	dc.w	eendscreen	screenaddress:	dc.w	$000		;screen 1	dc.w	$800		;screen 2	dc.w	$1000		;screen 3 	bgpalletes:		;pallete,page,fill first 20 =0	dc.w	borgpal11		;0	dc.b	8,0	dc.w	bugpal	dc.b	8,0	dc.w	queenpal	dc.b	8,0	dc.w	titlepal				dc.b	8,1	dc.w	ancientpal	dc.b	8,0	dc.w	invenpal	dc.b	8,0	dc.w	lavapal	dc.b	8,0	dc.w	intropal	dc.b	8,1	dc.w	ultrapal11	;8	dc.b	8,0	dc.w	bubpal	dc.b	8,0	dc.w	worldpal	dc.b	8,1	dc.w	worldpal2	dc.b	8,1	dc.w	worldpal3	dc.b	8,1	dc.w	intropal	dc.b	8,1	dc.w	borgpal12	;14	dc.b	8,0	dc.w	borgpal13	;15	dc.b	8,0	dc.w	borgpal14	;16	dc.b	8,0	dc.w	borgpal21	;17	dc.b	8,0	dc.w	ultrapal12	;18	dc.b	8,0	dc.w	ultrapal13	;19	dc.b	8,0	dc.w	ultrapal14	;20	dc.b	8,0	dc.w	podbosspal	;21		dc.b	8,0	dc.w	bugpal2		;22	dc.b	8,0	dc.w	bugpal3		;23	dc.b	8,0	dc.w	ancientpal2	;24	dc.b	8,0	dc.w	ancientpal3	;25	dc.b	8,0	dc.w	ancientpal4	;26	dc.b	8,0	dc.w	borgpal31	;27	dc.b	8,0	dc.w	bubpal2		;28	dc.b	8,0		dc.w	bubpal3		;29	dc.b	8,0		dc.w	ultrabossbgpal	;30	dc.b	8,0	dc.w	doorlifterpal		;31	dc.b	8,0	dc.w	borgpal22	;32	dc.b	8,0	dc.w	borgpal23	;33	dc.b	8,0	dc.w	borgpal24	;34	dc.b	8,0	bgcharsets:		;address,page,empty	dc.w	borgchar	dc.b	3,0	dc.w	bugchar	dc.b	6,0	dc.w	borgchar2	dc.b	4,0	dc.w	borgchar3	dc.b	19,0	dc.w	ancientchars	dc.b	18,0	dc.w	invenchar	dc.b	18,0	dc.w	lavachar	dc.b	9,0	dc.w	creditchar	dc.b	20,0		dc.w	ultrachar	dc.b	17,0	dc.w	bubchar	dc.b	13,0	dc.w	worldchar	dc.b	9,0	dc.w	worldchar	dc.b	9,0	dc.w	worldchar	dc.b	9,0	dc.w	introchar	dc.b	20,0	dc.w	borgchar2	;14	dc.b	4,0	dc.w	borgchar3	;15	dc.b	19,0	dc.w	doorchar	;16 - door lifter	dc.b	21,0	ebgcharsets:	dc.w	eborgchar	dc.w	ebugchar	dc.w	eborgchar2	dc.w	eborgchar3	dc.w	eancientchars	dc.w	einvenchar	dc.w	elavachar	dc.w	ecreditchar	dc.w	eultrachar	dc.w	ebubchar	dc.w	eworldchar	dc.w	eworldchar	dc.w	eworldchar	dc.w	eintrochar	dc.w	eborgchar2	dc.w	eborgchar3	dc.w	edoorchar	** sprite stuff*spritepalletes:	;address,page,fill last 32	dc.w	bobpal11		;sprpal.asm	dc.b	6,0	dc.w	creditsprpal	dc.b	6,1		dc.w	sprbugpal	dc.b	6,0	dc.w	iconpal	dc.b	6,1	dc.w	ancientobjpal	dc.b	6,0	dc.w	lavaobjpal	dc.b	6,0	dc.w	logosprpal		;	dc.b	6,1	dc.w	jungpal	dc.b	6,0	dc.w	worldsprpal	dc.b	6,1	dc.w	ultrasprpal11	;9	dc.b	6,0	dc.w	screenlifterpal	dc.b	6,0	dc.w	chevpal			;11	dc.b	6,1	dc.w	deathpal		;pussmanpal		;12	dc.b	6,0	dc.w	lavabosspal		;13	dc.b	6,0	dc.w	bobpal12		;14	dc.b	6,0		dc.w	bobpal13		;15	dc.b	6,0	dc.w	bobpal14		;16	dc.b	6,0	dc.w	ultrasprpal12	;17	dc.b	6,0	dc.w	ultrasprpal13	;18	dc.b	6,0	dc.w	ultrasprpal14	;19	dc.b	6,0	dc.w	snakebosspal	;20		dc.b	6,0	dc.w	mutoidbosspal	;21	dc.b	6,0	dc.w	sprbugpal2		;22	dc.b	6,0	dc.w	sprbugpal3		;23	dc.b	6,0	dc.w	ancientobjpal2	;24	dc.b	6,0	dc.w	ancientobjpal3	;25	dc.b	6,0	dc.w	ancientobjpal4	;26	dc.b	6,0	dc.w	worldsprpal2	;27	dc.b	6,1	dc.w	worldsprpal3	;28	dc.b	6,1	dc.w	queenspritepal		;29	dc.b	6,0		dc.w	dadpal			;30	dc.b	6,1			dc.w	cadpal			;31	dc.b	6,1			dc.w	vetpal			;32	dc.b	6,1			dc.w	graypal			;33	dc.b	6,1	dc.w	ultrabosspal	;34	dc.b	6,0	dc.w	ancientbosspal	;35	dc.b	6,0	dc.w	jungpal2		;36	dc.b	6,0	dc.w	jungpal3		;37	dc.b	6,0	spritecharsets:	dc.w	bobchar				;regular bob	dc.b	5,0	dc.w	passobj0			;password screen	dc.b	3,0	dc.w	logosprobj			;not used	dc.b	11,0		dc.w	worldsprchar		;world maps...	dc.b	21,0	dc.w	introobj			;intro rocks	dc.b	17,0	dc.w	grayobj0	dc.b	24,0	espritecharsets:	dc.w	ebobchar	dc.w	epassobj0	dc.w	elogosprobj	dc.w	eworldsprchar	dc.w	eintroobj	dc.w	egrayobj0	badspritecharsets:	dc.w	borgobj				;bad borgs	dc.b	16,0	dc.w	bugobj				;bad bugs	dc.b	12,0	dc.w	dadobj				;bob's dad	dc.b	22,0	dc.w	scootchars			;fast scooter	dc.b	8,0	dc.w	passobj1			;password screen 2	dc.b	3,0	dc.w	queenobj			;queen boss	dc.b	15,0	dc.w	iconchar			;inventory	dc.b	12,0	dc.w	ancientobj			;ancient sprites	dc.b	8,0	dc.w	lavaobj			;	dc.b	20,0	dc.w	logosprobj	dc.b	11,0		dc.w	jungobj	dc.b	24,0	dc.w	bodyobj	dc.b	12,0	dc.w	lavabossobj	dc.b	21,0	dc.w	screenlifterobj		;13	dc.b	16,0	dc.w	chevobj	dc.b	17,0	dc.w	cadobj	dc.b	16,0	dc.w	vettobj	dc.b	18,0	dc.w	mouthobj			;17	dc.b	10,0		dc.w	world2sprchar		;18	dc.b	8,0	dc.w	virusobj			;19	dc.b	virusbank,0	dc.w	deathbossobj		;pussmanobj			;20	dc.b	10,0	dc.w	grayobj1			;21	dc.b	24,0	dc.w	mutoidobj			;22	dc.b	11,0	dc.w	snakeobj			;23	dc.b	21,0	ebadspritecharsets:	dc.w	eborgobj	dc.w	ebugobj	dc.w	edadobj	dc.w	escootchars	dc.w	epassobj1	dc.w	equeenobj	dc.w	eiconchar	dc.w	eancientobj	dc.w	elavaobj	dc.w	elogosprobj	dc.w	ejungobj	dc.w	ebodyobj	dc.w	elavabossobj	dc.w	escreenlifterobj	dc.w	echevobj	dc.w	ecadobj	dc.w	evettobj	dc.w	emouthobj	dc.w	eworld2sprchar	dc.w	evirusobj	dc.w	edeathbossobj		;pussmanobj	dc.w	egrayobj1	dc.w	emutoidobj	dc.w	esnakeobj	** Block sets for the ultra force*blocksets:			;blockaddress,page,empty	dc.w	borgblocks	dc.b	3,0	dc.w	bugblocks	dc.b	3,0	dc.w	borgblocks2	dc.b	18,0	dc.w	borgblocks3	dc.b	15,0	dc.w	ancientblocks	dc.b	11,0	dc.w	ancientblocks 	dc.b	11,0	dc.w	lavablocks	dc.b	9,0	dc.w	ultrablocks	dc.b	22,0	dc.w	bubblocks	dc.b	4,0	dc.w	worldblocks	dc.b	18,0	dc.w	doorblocks		;10	dc.b	17,0	dc.w	worldblocks	dc.b	18,0	dc.w	introblocks	dc.b	1,0eblocksets:	dc.w	eborgblocks	dc.w	ebugblocks	dc.w	eborgblocks2	dc.w	eborgblocks3	dc.w	eancientblocks	dc.w	eancientblocks	dc.w	elavablocks	dc.w	eultrablocks	dc.w	ebubblocks	dc.w	eworldblocks	dc.w	edoorblocks	dc.w	eworldblocks	dc.w	eintroblocks	** Maps for the ultra force*		maptable:			;addr,bank #,mapwidth					;map start point					;block set, map type	dc.w	borgmap1			;0 storage	dc.b	3,64	dc.b	#<scrollmap-5+(64*3)			dc.b	#>scrollmap-5+(64*3)			dc.b	0,#borglevel		dc.w	bugmap2				;1 bug map #1	dc.b	12,56	dc.b	#<scrollmap-6+(56*2)	dc.b	#>scrollmap-6+(56*2)	dc.b	1,#buglevel	dc.w	borgmap2			;2 outpost	dc.b	4,48	dc.b	#<scrollmap-4+(48*3)			dc.b	#>scrollmap-4+(48*3)			dc.b	0,#borglevel			dc.w	popeyebossmap		;3 popeye boss	dc.b	4,40	dc.b	#<scrollmap-4+(4*40)	dc.b	#>scrollmap-4+(4*40)	dc.b	4,#ancientlevel		dc.w	borgmap6			;4 prison	dc.b	15,80	dc.b	#<scrollmap+(80*22)+5	dc.b	#>scrollmap+(80*22)+5	dc.b	0,#borglevel				dc.w	bugmap7				;5 bugmap #2  	dc.b	15,88	dc.b	#<scrollmap+(4*88)-6	dc.b	#>scrollmap+(4*88)-6	dc.b	1,#buglevel		dc.w	scootmap		;6 borg scooters	dc.b	16,168	dc.b	#<scrollmap-3	dc.b	#>scrollmap-3	dc.b	0,#borglevel			dc.w	lavamap1		;7lava level - 2	dc.b	19,64	dc.b	#<scrollmap-2+(44*64)	dc.b	#>scrollmap-2+(44*64)	dc.b	6,#lavalevel			dc.w	lavamap1		;8 empty 	dc.b	9,8 	dc.b	#<scrollmap+(82*8)	dc.b	#>scrollmap+(82*8)	dc.b	3,#spacelevel	dc.w	bugmap13		;9 large snaky bug	dc.b	5,80	dc.b	#<scrollmap+14+(2*80)	dc.b	#>scrollmap+14+(2*80)	dc.b	1,#buglevel	dc.w	ultramap5		;madman's level	dc.b	24,120	dc.b	#<scrollmap-4+(120*74)	dc.b	#>scrollmap-4+(120*74)	dc.b	7,#ultralevel	dc.w	bigship1		;11 borg space port	dc.b	12,80	dc.b	#<scrollmap+(4*80)-3	dc.b	#>scrollmap+(4*80)-3	dc.b	0,#borglevel			dc.w	borgmap35		;12 scooter map 4	dc.b	22,168 	dc.b	#<scrollmap+(4*168)+10	dc.b	#>scrollmap+(4*168)+10	dc.b	3,#borglevel3		dc.w	queenmap		;queen map 13	dc.b	9,40	dc.b	#<scrollmap-6+(2*40)	dc.b	#>scrollmap-6+(2*40)	dc.b	1,#buglevel			dc.w	borgsnake		;14borg snake boss	dc.b	20,40	dc.b	#<scrollmap-4+(3*40)	dc.b	#>scrollmap-4+(3*40)	dc.b	0,#borglevel		dc.w	borgmap7		;15borg step ladder	dc.b	16,64	dc.b	#<scrollmap-4+(4*64)	dc.b	#>scrollmap-4+(4*64)	dc.b	2,#borglevel2			dc.w	borgmap11		;16borg big ladder	dc.b	16,48	dc.b	#<scrollmap-6+(59*48)	dc.b	#>scrollmap-6+(59*48)	dc.b	2,#borglevel2		dc.w	borgmap20		;17empty	dc.b	16,40	dc.b	#<scrollmap-4+(8*40)	dc.b	#>scrollmap-4+(8*40)	dc.b	0,#borglevel			dc.w	borgmap12		;18borg house o beef	dc.b	16,56	dc.b	#<scrollmap-4+(5*56)	dc.b	#>scrollmap-4+(5*56)	dc.b	0,#borglevel		dc.w	borgmap13		;19borg elevator drop	dc.b	16,56	dc.b	#<scrollmap-4+(2*56)	dc.b	#>scrollmap-4+(2*56)	dc.b	2,#borglevel2		dc.w	borgmap4		;20...			dc.b	22,40	dc.b	#<scrollmap-5+(7*40)	dc.b	#>scrollmap-5+(7*40)	dc.b	0,#borglevel	dc.w	bugmap11		;21 bug chambers  	dc.b	3,48	dc.b	#<scrollmap+(3*48)-4	dc.b	#>scrollmap+(3*48)-4	dc.b	1,#buglevel	dc.w	bugmap26		;22  last of the buggers  	dc.b	12,128	dc.b	#<scrollmap+(4*128)-3	dc.b	#>scrollmap+(4*128)-3	dc.b	1,#buglevel	dc.w	ancientmap8		;23 ancient #1	dc.b	18,200	dc.b	#<scrollmap-4+(6*200)	;6	dc.b	#>scrollmap-4+(6*200)	;6	dc.b	4,#ancientlevel			dc.w	ancientmap3		;24 ancient hourglass	dc.b	21,72	dc.b	#<scrollmap-4+(82*72)	dc.b	#>scrollmap-4+(82*72)	dc.b	4,#ancientlevel			dc.w	ancientmap7		;25 		vertical challenge	dc.b	1,48	dc.b	#<scrollmap-4+(48*6)	dc.b	#>scrollmap-4+(48*6)	dc.b	4,#ancientlevel			dc.w	ancientmap6		;26 		planet...huge	dc.b	24,128	dc.b	#<scrollmap-4+(128*40)	dc.b	#>scrollmap-4+(128*40)	dc.b	4,#ancientlevel			dc.w	borgmap17		;27 borg decision	dc.b	5,48	dc.b	#<scrollmap-4+(2*48)	dc.b	#>scrollmap-4+(2*48)	dc.b	2,#borglevel2	dc.w	ancientmap5		;28 ancient rollo	dc.b	2,88	dc.b	#<scrollmap-3	;+(1*80)	dc.b	#>scrollmap-3	;+(1*80)	dc.b	4,#ancientlevel			dc.w	ancientmap2		;29 ancient hmmmm	dc.b	20,136	dc.b	#<scrollmap-4+(3*136)	dc.b	#>scrollmap-4+(3*136)	dc.b	4,#ancientlevel		dc.w	borgmap23		;30 borg tower!!!	dc.b	12,40	dc.b	#<scrollmap+8+(40*106)	dc.b	#>scrollmap+8+(40*106)	dc.b	2,#borglevel2	dc.w	ancientboss		;31 ancient boss -flower	dc.b	15,72	dc.b	#<scrollmap-3+(3*72)	dc.b	#>scrollmap-3+(3*72)	dc.b	4,#ancientlevel		maptable2:	dc.w	lavamap66		;32 lava map 66	dc.b	14,96	dc.b	#<scrollmap+(52*96)-1	dc.b	#>scrollmap+(52*96)-1	dc.b	6,#lavalevel				dc.w	lavaboss		;33 lava boss	dc.b	24,40	dc.b	#<scrollmap-4	;3	dc.b	#>scrollmap-4	;3	dc.b	6,#lavalevel			dc.w	bigship2		;34 borg space port #2	dc.b	12,80	dc.b	#<scrollmap+(4*80)-3	dc.b	#>scrollmap+(4*80)-3	dc.b	2,#borglevel2						dc.w	ultramap1	dc.b 	11,88	dc.b	#<scrollmap-3+(88*5)	dc.b	#>scrollmap-3+(88*5)	dc.b	7,#ultralevel					dc.w	bubmap1	dc.b 	19,96	dc.b	#<scrollmap-5+(96*28)	dc.b	#>scrollmap-5+(96*28)	dc.b	8,#bubblelevel					dc.w	ultramap3	dc.b 	24,96	dc.b	#<scrollmap-3+(96*2)	dc.b	#>scrollmap-3+(96*2)	dc.b	7,#ultralevel				dc.w	ultramap2		;38	dc.b 	15,112	dc.b	#<scrollmap-3+(112*4)	dc.b	#>scrollmap-3+(112*4)	dc.b	7,#ultralevel				dc.w	worldmap1		;39	goth planet map 	dc.b 	20,#W1WIDE	dc.b	#<scrollmap-16	dc.b	#>scrollmap-16	dc.b	9,#worldlevel		dc.w	borgmap20		;40 screen lifter	dc.b	16,40	dc.b	#<scrollmap-5+(8*40)	dc.b	#>scrollmap-5+(8*40)	dc.b	10,#borglevel4			dc.w	worldmap2		;41	ancient planet map 	dc.b 	20,#W2WIDE	dc.b	#<scrollmap-15	dc.b	#>scrollmap-15	dc.b	9,#worldlevel		dc.w	worldmap3		;42	ultra planet map 	dc.b 	20,#W3WIDE	dc.b	#<scrollmap-15	dc.b	#>scrollmap-15	dc.b	9,#worldlevel			dc.w	bubblemap2	dc.b 	22,104	dc.b	#<scrollmap+4+(104*31)	dc.b	#>scrollmap+4+(104*31)	dc.b	8,#bubblelevel		dc.w	bubblemap3	;44	dc.b 	18,184	dc.b	#<scrollmap+8+(184*40)	dc.b	#>scrollmap+8+(184*40)	dc.b	8,#bubblelevel	dc.w	intromap	;45	dc.b 	16,72	dc.b	#<scrollmap+8+72	dc.b	#>scrollmap+8+72	dc.b	12,#buglevel		dc.w	intromap	;46 ; titles	dc.b 	16,72	dc.b	#<scrollmap-8	dc.b	#>scrollmap-8	dc.b	12,#buglevel	dc.w	borgmap31		;47 	;scooter 3	dc.b	15,216	dc.b	#<scrollmap+56+(2*216)	dc.b	#>scrollmap+56+(2*216)	dc.b	3,#borglevel3			dc.w	borgmap32		;48 	dc.b	16,160	dc.b	#<scrollmap-3+(22*160)	dc.b	#>scrollmap-3+(22*160)	dc.b	3,#borglevel3			dc.w	borgmap33		;49 	dc.b	21,152	dc.b	#<scrollmap-3+(10*152)	dc.b	#>scrollmap-3+(10*152)	dc.b	3,#borglevel3			dc.w	borgmap34		;50 	dc.b	24,168	dc.b	#<scrollmap-3+(4*168)	dc.b	#>scrollmap-3+(4*168)	dc.b	3,#borglevel3		dc.w	lavamap99		;51 	dc.b	12,96	dc.b	#<scrollmap+(4*96)-3	dc.b	#>scrollmap+(4*96)-3	dc.b	6,#lavalevel		dc.w	pussbossmap		;52 	dc.b	12,40	dc.b	#<scrollmap-3+(4*40)	dc.b	#>scrollmap-3+(4*40)	dc.b	7,#ultralevel		dc.w	mutoidmap		;53	dc.b 	10,40	dc.b	#<scrollmap-3+(4*40)	dc.b	#>scrollmap-3+(4*40)	dc.b	7,#ultralevel						dc.w	ultrabossmap	;54	dc.b 	22,40	dc.b	#<scrollmap-3+(4*40)	dc.b	#>scrollmap-3+(4*40)	dc.b	7,#ultralevel				dc.w	scootmap2		;55 borg scooter 2 	dc.b	15,176	dc.b	#<scrollmap-2+(1*176)	dc.b	#>scrollmap-2+(1*176)	dc.b	2,#borglevel2		dc.w	ultramap4		;56 ultra map 4 	dc.b	11,88	dc.b	#<scrollmap+42+(51*88)	dc.b	#>scrollmap+42+(51*88)	dc.b	7,#ultralevel			dc.w	intromap2		;57	dc.b 	15,112	dc.b	#<scrollmap-8+112	dc.b	#>scrollmap-8+112	dc.b	12,#buglevel		dc.w	intromap3		;58	dc.b 	15,112	dc.b	#<scrollmap-8+112	dc.b	#>scrollmap-8+112	dc.b	12,#buglevel	dc.w	bigship3		;59 borg space port #3	dc.b	12,80	dc.b	#<scrollmap+(4*80)-3	dc.b	#>scrollmap+(4*80)-3	dc.b	3,#borglevel3			** corresponding map end addresses*endmapaddress:	dc.w	eborgmap1	;0	dc.w	ebugmap2	dc.w	eborgmap2		dc.w	epopeyebossmap	dc.w	eborgmap6	dc.w	ebugmap7	dc.w	escootmap	dc.w	elavamap1	dc.w	elavamap1	dc.w	ebugmap13	dc.w	eultramap5	;10	dc.w	ebigship1	dc.w	eborgmap35	dc.w	equeenmap	dc.w	eborgsnake	dc.w	eborgmap7	dc.w	eborgmap11	dc.w	eborgmap20	;empty	dc.w	eborgmap12	dc.w	eborgmap13	dc.w	eborgmap4	;20	dc.w	ebugmap11	dc.w	ebugmap26	dc.w	eancientmap8	dc.w	eancientmap3	dc.w	eancientmap7	dc.w	eancientmap6	dc.w	eborgmap17	dc.w	eancientmap5	dc.w	eancientmap2	dc.w	eborgmap23	;30	dc.w	eancientboss	dc.w	elavamap66		dc.w	elavaboss	dc.w	ebigship2	dc.w	eultramap1	dc.w	ebubmap1	dc.w	eultramap3	dc.w	eultramap2	dc.w	eworldmap1	dc.w	eborgmap20	;40	dc.w	eworldmap2	dc.w	eworldmap3	dc.w	ebubblemap2	dc.w	ebubblemap3	dc.w	eintromap	dc.w	eintromap	dc.w	eborgmap31	dc.w	eborgmap32	dc.w	eborgmap33	dc.w	eborgmap34	dc.w	elavamap99	;51	dc.w	epussbossmap	dc.w	emutoidmap	dc.w	eultrabossmap	dc.w	escootmap2	dc.w	eultramap4	dc.w	eintromap2	dc.w	eintromap3	dc.w	ebigship3	;59	** Select a map to play*maxmaps:	dc.b	14,19,17	allthemaps:	dc.w	themapsequence1	dc.w	themapsequence2	dc.w	themapsequence3	themapsequence1:	dc.b	0,1,2,9,4,22,6,5,14,20,21,18,13,11	themapsequence2:	dc.b	23,15,7,24,16,51,19,29,32,55,25,3,27,28,33,30,26,40,34	themapsequence3	dc.b	35,48,36,38,43,53,47,44,37,49,56,52,12,50,10,54,59	whichworldmap:	dc.b	39,41,42	passwordframe:	dc.b	6	dc.b	$f0,$c0,12	dc.b	$e0,$c0,14	dc.b	$d0,$c0,32	dc.b	$c0,$c0,34	dc.b	$90,$c0,36	dc.b	$a0,$c0,38	passworddigits:	dc.b	0,2,4,6,8,10,12,14,32,34combojames:	dc.b	3,6,9,12,15,18initstarspeed	dc.b	1,2,1,2	** title/credit/demo driver*mapselect:	jsr	TSKinit2		;kill all other tasks...		stz	noshowpw	stz	introend		stz	status			;clear all joystick stuff	stz	debounce	stz	debounce+1	stz	Joy1Data+1	stz	Joy1Data	jsl clearspriteslong** title music*	lda	gettitlemusic	beq	@nopoint		lda	#ForcedBlankOn	sta	INIDISP		jsr	initmusic	lda	#theme			;play music		sta	APU_PORT0	lda	#$ff	jsl	soundeffects	sta	volume	lda	#99	sta	currentmusic	stz	gettitlemusic    lda	#ForcedBlankOff 	;then load correct sound	sta	INIDISP** should we show chris's head? (no, its too fat)*@nopoint:	lda	funnyhead	bne	@logodone		stz	gamestart	jsr	loadgraymatter	jsr	loadgraymatter2	jsr	dofadein2		;show stuff	jsl	TSKsuspend	jsr	movepwstars	lda	fade	beq	@fadeaway	rtl@fadeaway:	stz	sfxnumber	jsl	TSKsuspend	jsr	movepwstars	jsr	abortdemo	bcs @killogo		inc	sfxnumber		;first time...	lda	sfxnumber		;hold the chris	cmp	#180			;screen for three	bcs	@killogo		;seconds	rtl	@killogo:	jsr	dofadeout	jsl	TSKsuspend	jsr	movepwstars	lda	fade	beq	@hurrah	rtl@hurrah:	inc	funnyhead	jsr	TSKinit2		;kill all other tasks...	stz	gamestart@logodone:** debug stuff*;	lda	#0		;end anim;	lda	#1		;caddy fall apart;	lda	#2		;out of gas;	sta	world;	jmp	@worldstuffloaded;;	jmp	@runtheintro	;dad and meteor** play on...*	lda	winflag2	bne	@noselect** ok...lost...so get back title music*	lda	gotocontinue	beq	@nocont	lda	#1	sta	doorcounter	stz	gotocontinue	;	lda	#-1;	sta	volumedir;	lda	#$ff;	sta	volume;	jsl	TSKsuspend;	lda	volumedir;	beq	@voldone;	rtl;@voldone:	stz	gamestart		lda	#ForcedBlankOn	sta	INIDISP		jsr	initmusic	lda	#theme			;play music		sta	APU_PORT0	lda	#$ff	jsl	soundeffects	sta	volume	lda	#99	sta	currentmusic    lda	#ForcedBlankOff 	;then load correct sound	sta	INIDISP	jmp	@readyforpassword@nocont:	jmp	@selectlevel@noselect:	jsr	extractworld	lda	demoflag		;hard code demo	beq	@carryon		;progression	lda	#35	sta	mapnumber	sta	mapnumber2	lda	#2	sta	world	jmp	@vomiter	@carryon:	jmp @fine	** ok...has beaten a world....now take off from there*@doneworld2** run in-between planet stuff*@worldstuffloaded:	jsr	mainscroll	jsr	dofadeout	jsl	TSKsuspend	lda	fade	beq	@crashy	jsr	mainscroll		rtl@crashy:	inc	destroy				;remove buildings...	stz	gamestart	stz	PICxhi,x	stz	PICyhi,x	stz	status	stz	maptype			lda	world			;end of game action is 3	inc	a	sta	introtype		jsr	loadtheintro	;get all sprite sets and stuff	lda	introtype	cmp	#2	bne	@level2a	jsl	scheduleintro2	bra	@adammok2@level2a:	cmp	#1	bne	@level3a	jsl	scheduleintro3	bra	@adammok2@level3a:	jsl	scheduleintro4@adammok2:		stz	introcount	stz	termtext	stz	titlecounter	lda	#1	sta	introflag		lda	#2				;allow vblank dma's	sta	gamestart	lda	#-2	sta	bobxposhi	sta	PICxhi,x	lda	#200	sta	bobxpos	sta PICxlo,x	lda	#100	sta	bobypos	sta	PICylo,x	stz	PICcolor,x		jsr	dofadein2		;fade in the funny scene	jsl	TSKsuspend	lda	fade	beq	@ready2	ldy	introtype	lda	initstarspeed,y	jsl	movestars	rtl	** process intro stuff*@ready2:	lda	introtype	cmp	#2	bne	@level2	jsl	processintro2	;hit rock	bra	@adammok@level2:	cmp	#3	beq	@endend	jsl	processintro3	;out of gas	bra	@adammok@endend:	jsl	processintro4	;end animation @adammok:			lda	introend	bne	@fadeoverintro		jsr	drawbob	jsr	globalizebob	rtl	@fadeoverintro:	jsr	dofadeout	jsl	TSKsuspend	lda	fade	beq	@awayx	rtl@awayx:	stz	PICadrLo,x	stz	PICadrHi,x	stz	PICxhi,x	stz	PICyhi,x	stz	gamestart	stz	introend	** carry on to next level*@playon:	stz	introflag	stz	bobready	inc	world	lda	world	cmp	#3	beq	@runthefinal	stz	mapsequence	jsr	extractworld	ldy	mapsequence	lda	(tmp),y	sta	mapnumber	jsr	buildpassword		;put correct password into ram-select	jmp	@doworldmaps	** show bob arriving for his date*@runthefinal:	stz	world	jsr	TSKinit2		jsl	TSKsuspend	lda	fade	beq	@loadintro34		;wait for fade	rtl@loadintro34:	lda	#1	sta	introflag		stz	introtype		jsr	loadtheintro	;get generic intro stuff	jsr	loaddate		;and add the rest of bob's stuff	jsl	scheduledate	;get the necessary tasks		stz	introcount		lda	#2				;allow vblank dma's	sta	gamestart	sta	staticintro		stz	bobxposhi	lda	#-1	sta	PICxhi,x	lda	#180	sta	bobxpos	sta PICxlo,x	lda	#170	sta	bobypos	sta	PICylo,x	jsr	drawbob		jsr	dofadein2		;fade in the funny scene	jsl	TSKsuspend	lda	fade	beq	@ready34	jsr	drawbob	jsr	globalizebob	rtl@ready34:	stz	exitdemo** run the date loop*	lda	#1	sta	introflag		jsl	TSKsuspend		;wait for abort	lda	exitdemo		;start the abortion	bne	@contdemo34	bra	@ignore34@endofitall:	inc	exitdemo	jsr	dofadeout@contdemo34:	lda	exitdemo		;exit when faded	beq	@ignore34	lda	fade	bne	@waitforit	stz	introflag	stz	PICadrLo,x	stz	PICadrHi,x	stz	PICxhi,x	stz	PICyhi,x	lda	#0	sta	gamestart	sta	staticintro	jmp	@fuckdate	;back to title screen@ignore34:	lda	introcount	cmp	#6	bcs	@endofitall	jsl	processdate	jsr	drawbob	jsr	globalizebob@waitforit:	rtl		** show bob fucking the date!!!!*@fuckdate:	jsl	TSKsuspend	jsl	TSKsuspend	jsr	TSKinit2		jsr	loadending	;get generic intro stuff	jsl	scheduleending	;and add the rest of bob's stuff	lda	#2				;allow vblank dma's	sta	gamestart	sta	staticintro	lda	#31	sta	PICbank,x		jsl	PICput	dw	dadframe5		stz	bobxposhi	lda	#0	sta	PICxhi,x	lda	#90	sta	bobxpos	sta PICxlo,x	lda	#84	sta	bobypos	sta	PICylo,x		jsr	dofadein2		;fade in the funny scene	jsl	TSKsuspend	lda	fade	beq	@ready35	rtl@ready35:	stz	exitdemo	** run the fuck loop*	stz	PICanim,x		jsl	TSKsuspend		;wait for abort	lda	exitdemo		;start the abortion	bne	@contdemo35	bra	@ignore35@endofitall45:	inc	exitdemo	jsr	dofadeout@contdemo35:	lda	exitdemo		;exit when faded	beq	@ignore35	lda	fade	bne	@waitforit	stz	introflag	stz	PICadrLo,x	stz	PICadrHi,x	stz	PICxhi,x	stz	PICyhi,x	stz	PICbank,x	stz	gamestart	stz	staticintro	jmp	@selectlevel	;back to title screen@ignore35:	lda	PICanim,x	cmp	#90	bcc	@incpic	jsr	abortdemo	bcc	@logofuck	jmp	@endofitall45@incpic:	lda	cputime	and	#3	cmp	#3	bne	@logofuck	lda	PICanim,x	inc	a	sta	PICanim,x@logofuck:	rtl	** progress to next level*@fine:	inc	mapsequence		;next map please;	lda	mapsequence;	cmp	maxlevels;	bcs	@doneworld2;	jmp	@fine	jsr	extractworld	ldy	mapsequence	lda	(tmp),y	sta	mapnumber;	jsr	buildpassword		;put correct password into ram-select	jmp	@done	** cycle through title/credit screens*@selectlevel:	stz	gamestart	jsr	loadlogoscreen	jsl	TSKsuspend	jsl	TSKsuspend	jsr	dofadein2		;show stuff	jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@away	rtl@away:	stz	titlecounter	lda	threeseconds	bne	@timeover	jsl	TSKsuspend	jsr	movescreen3;	jsr	abortdemo;	bcs	@killtitle;	rtl		inc	threeseconds		;first time...	lda	threeseconds		;hold the nintendo	cmp	#160				;screen for three	bcs	@killtitle			;seconds	rtl@timeover:	jsl	TSKsuspend			;allow the title	jsr	movescreen3	jsr	abortdemo	bcc	@huh	jmp	@thenselectlevel@huh:	inc	titlecounter	lda	titlecounter	cmp	#240	bcs	@killtitle	rtl@killtitle:	stz	titlecounter	jsr	dofadeout	jsl	TSKsuspend			;wait for fade to die	lda	fade	beq	@thecredits	jsr	movescreen3	rtl@thecredits:	stz	introflag	** credit page 1*	lda	#ForcedBlankOn		;draw credit page	sta	INIDISP	lda	#17					;bobo lips fix	17	ldy	#0	jsr	drawscreen		lda	#ForcedBlankOff	sta	INIDISP		jsl	TSKsuspend		lda	#0					;push...	sta	Vpos	stz	gamestart	stz	titlecounter		;and fade them in	jsr	dofadein2				jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@creditsonx	rtl@creditsonx:	jsl	TSKsuspend			;allow the title	jsr	movescreen3	jsr	abortdemo	bcc	@funnylabel	jmp	@thenselectlevel@funnylabel:;	jsr	abortdemo;	bcc	@waitformynamex		inc	titlecounter	lda	titlecounter	cmp	#240	bcc	@waitformynamex	jsr	dofadeout	stz	titlecounter	bra	@titleagainx@waitformynamex:	rtl@titleagainx:	jsl	TSKsuspend	lda	fade	beq	@scrollbackx	jsr	movescreen3	rtl@scrollbackx:** credit screen 2*@credit2:	lda	#ForcedBlankOn		;draw credit page	sta	INIDISP	lda	#19	ldy	#0	jsr	drawscreen	lda	#ForcedBlankOff	sta	INIDISP		lda	#0					;push...	sta	Vpos		jsl	TSKsuspend@scrolledon:	stz	gamestart	stz	titlecounter		;and fade them in	jsr	dofadein2				jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@creditson	rtl@creditson:	jsl	TSKsuspend			;allow the title	jsr	movescreen3				jsr	abortdemo	bcs	@thenselectlevel	inc	titlecounter	lda	titlecounter	cmp	#240	bcc	@waitformyname	jsr	dofadeout	stz	titlecounter	bra	@titleagain@waitformyname	rtl@titleagain:	jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@scrollback	rtl@scrollback:** draw the title screen again*	stz	gamestart	jsr	loadlogoscreen	stz	titlecounter		;and fade them in	jsl	TSKsuspend	jsl	TSKsuspend	jsr	dofadein2				jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@titleon2	rtl@titleon2:	jsl	TSKsuspend			;allow the title	jsr	movescreen3	jsr	abortdemo	bcs	@thenselectlevel	inc	titlecounter	lda	titlecounter	cmp	#240	bcc	@lasttitle	jsr	dofadeout	stz	titlecounter	jmp	@runtheintro@lasttitle:	rtl		** ok...allow user to enter a password*@thenselectlevel:	stz	doorcounter	jsr	dofadeout		;kill existing screen	jsl	TSKsuspend	jsr	movescreen3	lda	fade	beq	@readyforpassword	rtl@readyforpassword:	stz	passwordstage	stz	introflag	stz	blinkyflag	jsl	TSKsuspend		lda	#1	sta	enterpassword	jsr	loadpasswordscreen	;load bg stuff	lda	#type_enemy	jsl	TSKschedule	dw	entermessage	tay	lda	#13	sta	TSKbank,y		lda	#type_enemy	jsl	TSKschedule	dw	invalidmessage	tay	lda	#13	sta	TSKbank,y		lda	#type_enemy	jsl	TSKschedule	dw	passwordrockgen	tay	lda	#7	sta	TSKbank,y		ldx	TSKcurrent		lda	#0	sta	PICcolor,x	sta	PICbank,x	lda	#1	sta	bobready	ldy	#0				;build the password frame@adamloop:	lda	passwordframe,y	sta	combo,y	iny	cpy	#19	bcc	@adamloop	;	lda	#1;	sta	blinkyflag		;	jsl	@worryingme		;draw digits first time;	stz	blinkyflag		;make sure all of them draw		lda	#0				;5	sta	whichdigit	stz	PICcount,x	stz	PICcount2,x		stz	invalidpass	lda	#65	sta	PICxlo,x	lda	#115	sta	PICylo,x	lda	bobpointer	bne	@pointdown	jsl	PICput	dw	bobpointup	bra	@faderz@pointdown:	jsl	PICput	dw	bobpointdown@faderz:		lda	#16				;wait for rocks to scroll...	jsl	TSKwait	jsr	dofadein2			jsl	TSKsuspend	jsr	movepwstars	lda	fade			;fade and show to user	beq	@interface	rtl** ready for user interface*@interface:	lda	#65	sta	PICxlo,x		lda	#115	sta	PICylo,x		lda	#0	sta	PICcolor,x		jsl	TSKsuspend	jsr	movepwstars		lda	debounce+1		;user wants to start	and	#JoyStart	beq	@nostartx				lda	bobpointer		;new game...start away...	bne	@readyforinput	stz	world	stz	mapnumber	stz	mapnumber2	stz	mapsequence	jmp	@entergame	@nostartx:		lda	debounce+1	and	#Joyselect	beq	@updown	lda	bobpointer	eor	#1	sta	bobpointer	bra	@notdown@updown:	lda	debounce+1		;move up and down	and	#JoyUp	beq	@down	stz	bobpointer	bra	@notdown@down:	lda	debounce+1	and	#JoyDown	beq	@notdown	lda	#1	sta	bobpointer@notdown:	lda	bobpointer	bne	@isdown	jsl	PICput	dw	bobpointup	rtl@isdown:	jsl	PICput	dw	bobpointdown		rtl		** process digits*@readyforinput:	lda	#1	sta	passwordstage	jsl	TSKsuspend		jsr	movepwstars	** porcess passworld*	lda	invalidpass	bne	@passfailed		lda	blinkyflag	bne	@entergame		lda	debounce+1		;user wants to start	and	#JoyStart	beq	@nostart	jsr	correlatepassword	bcs	@passchecked	lda	#1				;bad!!!	sta	invalidpass	sta	blinkyflag	stz	datecounter		** invalid passworld*;	lda	mapnumber;	ora	world;	bne	@passchecked@passfailed:		lda	datecounter	inc	a	sta	datecounter	cmp	#120	bcc	@notdennisdone	lda	alternate	and	#1	beq	@dennisdone@notdennisdone:	jsr	movepwstars	jmp	@fine2	@dennisdone	lda	#1	sta	bobpointer	stz	passwordstage	stz	invalidpass	stz	blinkyflag	jmp	@interface** correct password*@passchecked:	inc	blinkyflag	lda	#1	sta	noshowpw	bra	@nostart@entergame:	jsr	dofadeout		;kill screen	jsl	TSKsuspend	lda	fade	beq	@checkpass	jsr	movepwstars	rtl@checkpass:	lda	#1	sta	noshowpw	lda	#1	sta	bobpointer		stz	weapon			;default configuration	lda	#3	sta	remote	stz	Hpos3	stz	Hpos3+1		lda	mapnumber	sta	sgivepassword		lda	mapsequence	beq	@domap	;	lda	mapnumber		;commented out for testing purposes!!!!!;	sta	mapnumber2;	;	jmp	@done2	@domap:	jmp	@doworldmaps** else look for other mods...* @nostart:	jsr	extractworld** handle left/right*	lda	PICcount2,x	beq	@canchange2	dec	PICcount2,x	lda	PICcount2,x	beq	@canchange2	bra	@worryingme@canchange2:	lda	debounce+1	and	#JoyLeft	beq	@notleft;	lda	#SFXSWITCH;	jsl	soundeffects	dec	whichdigit	lda	whichdigit	cmp	#-1	bne	@mapguy	lda	#5	sta	whichdigit@mapguy:	lda	#10	sta	PICcount2,x	bra	@worryingme@notleft:	lda	debounce+1	and	#JoyRight	beq	@worryingme;	lda	#SFXSWITCH;	jsl	soundeffects	inc	whichdigit	lda	whichdigit	cmp	#6	bne	@mapguy2	lda	#0	sta	whichdigit@mapguy2:	lda	#10	sta	PICcount2,x** handle up/down*@worryingme:	lda	PICcount,x	beq	@canchange	dec	PICcount,x	lda	PICcount,x	beq	@canchange	bra	@worryingme2@canchange	lda	debounce+1	and	#JoyDown	beq	@notup;	lda	#SFXSWITCH;	jsl	soundeffects	ldy	whichdigit	lda	realcomboframe,y	dec	a	cmp	#-1	bne	@notwrapped	lda	#9@notwrapped:	sta	realcomboframe,y	lda	#10	sta	PICcount,x	bra	@worryingme2@notup:	lda	debounce+1	and	#Joyselect	bne	@moveupup	lda	debounce+1	and	#JoyUp	beq	@worryingme2@moveupup:;	lda	#SFXSWITCH;	jsl	soundeffects	ldy	whichdigit	lda	realcomboframe,y	inc	a	cmp	#10	bne	@notwrapped2	lda	#0@notwrapped2:	sta	realcomboframe,y	lda	#10	sta	PICcount,x@worryingme2:	** draw the password*@fine2:	ldy	realcomboframe	lda	passworddigits,y	sta	combo+3	ldy realcomboframe+1	lda	passworddigits,y	sta	combo+6	ldy	realcomboframe+2	lda	passworddigits,y	sta	combo+9	ldy	realcomboframe+3	lda	passworddigits,y	sta	combo+12	ldy	realcomboframe+4	lda	passworddigits,y	sta	combo+15	ldy	realcomboframe+5	lda	passworddigits,y	sta	combo+18	lda	PICcount2,x	bne	@blank	lda	PICcount,x	bne	@nofudgepack	lda	blinkyflag	bne	@nofudgepack	lda	cputime	and	#8	beq	@nofudgepack@blank:	ldy	whichdigit	lda	combojames,y	tay	lda	#238	sta	combo,y@nofudgepack:	lda	#2	sta	PICcolor,x	lda	#$88	sta	PICxlo,x		lda	#$90-4-32	sta	PICylo,x				jsl	PICput	dw	combo		rtl** show dad talking to bob*@runtheintro:	jsl	TSKsuspend	lda	fade	beq	@loadintro33		;wait for fade	rtl@loadintro33:	stz	introflag	jsl	TSKsuspend	jsl	TSKsuspend	lda	#1	sta	introflag		lda	#3	sta	introtype		lda	#1	sta	staticintro		jsr	loadtheintro	;get generic intro stuff	jsr	loaddad			;and add the rest of bob's stuff	jsl	scheduledad		;get the necessary tasks		stz	introcount	stz	termtext		lda	#2				;allow vblank dma's	sta	gamestart		stz	bobxposhi	stz	PICxhi,x	lda	#180	sta	bobxpos	sta PICxlo,x	lda	#170	sta	bobypos	sta	PICylo,x	jsr	drawbob		jsr	dofadein2		;fade in the funny scene	jsl	TSKsuspend	lda	fade	beq	@ready33	jsr	drawbob	jsr	globalizebob	rtl@ready33:	stz	exitdemo	jsr	drawbob	jsl	TSKsuspend		;wait for abort	jsr	abortdemo	bcc	@contdemo33	lda	exitdemo		;start the abortion	bne	@contdemo33	inc	exitdemo	jsr	dofadeout@contdemo33:	lda	exitdemo		;exit when faded	beq	@ignore33	lda	fade	bne	@ignore33	 	stz	introflag	stz	PICadrLo,x	stz	PICadrHi,x	stz	PICxhi,x	stz	PICyhi,x	lda	#0	sta	gamestart	sta	staticintro	jmp	@selectlevel	;back to title screen@ignore33:	lda	introcount	cmp	#14	bcc	@playonww	jsr	dofadeout	bra	@runtheintro2@playonww:		jsl	processdad	jsr	drawbob	jsr	globalizebob	rtl	** now show bob as he drives off...*@runtheintro2:	jsl	TSKsuspend	lda	fade	beq	@loadintro		;wait for fade	rtl@loadintro:	stz	staticintro	lda	#0	sta	introtype		jsr	loadtheintro	;get all sprite sets and stuff	jsl	scheduleintro	;get the necessary tasks		stz	introcount		lda	#2				;allow vblank dma's	sta	gamestart@introstart:	lda	#-2	sta	bobxposhi	sta	PICxhi,x	lda	#200	sta	bobxpos	sta PICxlo,x	lda	#100	sta	bobypos	sta	PICylo,x		jsr	dofadein2		;fade in the funny scene	jsl	TSKsuspend	lda	fade	beq	@ready	lda	#1	jsl	movestars	rtl@ready:	stz	exitdemo	jsl	TSKsuspend		;wait for abort	jsr	abortdemo	bcc	@contdemo	lda	exitdemo		;start the abortion	bne	@contdemo	inc	exitdemo	jsr	dofadeout@contdemo:	lda	exitdemo		;exit when faded	beq	@ignore	lda	fade	bne	@ignore	stz	introflag	stz	PICadrLo,x	stz	PICadrHi,x	stz	PICxhi,x	stz	PICyhi,x	lda	#0	sta	gamestart	jsl	TSKsuspend	jsl	TSKsuspend	jmp	@selectlevel	;back to title screen@ignore:	jsl	processintro	;process	lda	introend	bne @activatedemo	jsr	drawbob	jsr	globalizebob		rtl	** activate the damn demo*@activatedemo:	stz	world	stz	mapnumber@vomiter:	stz	democount	stz	mapsequence	inc	demoflag	stz	winflag2	stz	bobready	jsr	extractworld		lda	world	bne	@otherone	lda	#3			;ediot fix	sta	remote		stz	weapon	lda	#<demopointer	ldy	#>demopointer	bra	@setaddr@otherone:	lda	#<demopointer2	ldy	#>demopointer2@setaddr:	sta	demoaddress	sty	demoaddress+1	*** ok...set up the world**@begin:	stz	bobready	jsr	dofadeout@wait:	jsl	TSKsuspend	lda	fade	bne	@unfaded	jmp	@doworldmaps@unfaded:	rtl	** should a password be shown ?*@done:@loadworldstuff:** now build world map*@doworldmaps:	stz	enterpassword	stz	destroy	stz	gamestart	stz	introflag	stz	PICadrLo,x	stz	PICadrHi,x	lda	#8	sta	PICbank,x	jsr	loadworldmap	** scroll on world map to desired start location*@adjustloop:	lda	#2	sta	gamestart;	lda	#8;	jsr	upscroll;	jsr	mainscroll;	lda	#8;	jsr	upscroll;	jsr	mainscroll;	lda	#8;	jsr	upscroll;	jsr	mainscroll;	lda	#8;	jsr	upscroll;	jsr	mainscroll;	lda	#8;	jsr	upscroll;	jsr	mainscroll	lda	#32	jsr	upscroll	jsr	mainscroll		stz	PICcount2,x	stz	datecounter	jsl	TSKsuspend	lda	#8	jsr	leftscroll	jsr	mainscroll	lda	datecounter	eor	#1	sta	datecounter	bne	@nosub	lda	PICcount2,x	inc	a	sta	PICcount2,x	cmp	wscrdistance					bcs	@wigged@nosub2:	rtl@wigged:	jsr	dofadein2	jsl	TSKsuspend	lda	fade	beq	@watch	jsr	mainscroll	rtl@watch:	lda	mapsequence			;is he just taking off?	cmp	maxlevels	bcs	@booblips			;then scroll was adjusted by loadworldmap		stz	doorspeed	jsl	TSKsuspend	jsr	abortdemo2	bcc	@scrollon	jmp	@labelaa@scrollon:	lda	PICcount2,x	cmp	PICcount,x	bcs	@adjustloopdone2	inc	a	inc	a	inc	a	inc	a	cmp	PICcount,x	bcc	@fast@slow:	ldy	doorspeed	lda slowdown,y	beq	@adjustloopdone2	tay	jsr	leftscroll	jsr	mainscroll		inc	doorspeed	rtl@fast:	lda	#8	jsr	leftscroll	jsr	mainscroll	lda	datecounter	eor	#1	sta	datecounter	bne	@nosub	lda	PICcount2,x	inc	a	sta	PICcount2,x;	cmp	PICcount,x				;	bcs	@adjustloopdone2@nosub:	rtl@adjustloopdone2:;	jsr	dofadein2;	jsl	TSKsuspend;	lda	fade;	beq	@booblips;	jsr	mainscroll;	rtl** now determine what bob is to do on world map*@booblips:	lda	mapsequence		;first time...				bne	@seeothers	jmp	@crashin		;crash on planet@seeothers	cmp	maxlevels		;or move on or...	bcc	@nocrashin	jmp	@doneworld		;leave		** do world map scroll adjust*@nocrashin:	lda	#8	sta	PICbank,x		stz	PICadrLo,x	stz	PICadrHi,x		stz	PICxhi,x	stz	PICyhi,x		lda	PICdir,x	sta	PICxlo,x		lda	PICdirv,x	sta	PICylo,x		jsr	mainscroll		lda	#7	sta	PICed,x		jmp	@rezoutofbuilding	;ok walk when done	** crash onto the world surface*@crashin:	stz	PICed,x				;init some vars		lda	#20	sta	PICcount2,x		lda	PICdir,x	sta	PICxlo,x		lda	#160	sta	PICylo,x	lda	#-1	sta	PICyhi,x	lda	#1	sta	PICcolor,x	jsr	mainscroll** plummet the car*	jsl	TSKsuspend	jsr	abortdemo2	bcc	@noabort1	jmp	@labelaa@noabort1:	lda	world			;plummeting car	cmp	#1	bne	@usecar	jsl	PICput	dw	mapbob9	stz	PICcolor,x	bra	@usedseat@usecar:	clc	adc	#8	jsr	drawworldbob@usedseat:	lda	#2	jsl	PICyadd	lda	PICyhi,x	bne	@nothing		lda	PICylo,x			;approach the ground...	cmp	PICdirv,x			;set in worldbob.asm	bcc	@nothing	lda	world	cmp	#1	bne	@explodecar	** bounce bob on world 2*	stz	PICcount,x	jsl	TSKsuspend	 	jsr	abortdemo2	bcc	@noabort1a	jmp	@labelaa@noabort1a:	lda	PICcount,x	tay	lda	bouncebob,y	cmp	#99	bne	@contbounce	lda	#10	sta	PICcount2,x	jmp	@headspin@contbounce	jsl	PICyadd	inc	PICcount,x	rtl			** cause an explosion*@explodecar:	lda #30	sta shakescreen			;shake the screen		stz	PICanim,x	jsl	TSKsuspend		jsr	abortdemo2	bcc	@noabort1b	jmp	@labelaa@noabort1b:	lda	#2					;change color to explosion	sta	PICcolor,x	lda	cputime				;and draw explosion	and	#7	cmp	#7	bne @nothing	inc	PICanim,x@noincss:	lda	PICanim,x	cmp	#3	bcs	@noway	clc	adc #14	jsr	drawworldbob@nothing:	jsr	mainscroll	rtl@noway:** make bob's head spin*@headspin:	jsl	TSKsuspend	jsr	abortdemo2	bcc	@noabort2	jmp	@labelaa	@noabort2:	lda	PICcount2,x				;when spinning done..	bne	@stillspinning	jmp	@rezzedin				;jump to walk code@stillspinning	lda	cputime	and	#3	cmp	#3	bne	@weenie	lda	PICcount2,x	dec	a	sta	PICcount2,x	lda	PICanim,x	inc	a	cmp	#3	bcc	@nowrapper	lda	#0@nowrapper:	sta	PICanim,x@weenie:	lda	PICanim,x	asl	a	tay	lda	fheadspin,y	sta	tmp	lda	fheadspin+1,y	sta	tmp+1	jsl	PICput2		stz	PICcolor,x	jsr	mainscroll	rtl	** rez-in out of building *@rezoutofbuilding:		jsl	TSKsuspend		jsr	abortdemo2	bcc	@noabort1c	jmp	@labelaa@noabort1c:		lda	PICed,x	beq	@rezzedin		lda	#5	sta	PICcolor,x	lda	PICvomit,x	beq	@closedoor	dec	a	sta	PICvomit,x	jmp	@noexit@closedoor:		lda	cputime	and	#7	cmp	#7	bne	@rezzing	lda	PICed,x	dec	a	sta	PICed,x	clc	adc	#22	jsr	drawworldbob@rezzing:	jmp	@noexit	** now walk to destination*	@rezzedin:		jsl	TSKsuspend@walk:		jsr	abortdemo2	bcc	@noabort1d	jmp	@labelaa@noabort1d:;	jsr	abortdemo		;debug fix;	bcs	@walk	;canexit;	jsr	mainscroll;	rtl;@walk:;	jsl	TSksuspend		jsl	extractworldmove	lda	mapmovex	bmi	@canexit	jsr	mainscroll	jsl	TSKsuspend		jsr	abortdemo2	bcc	@noabort1e	jmp	@labelaa@noabort1e:	lda	#0	sta	PICcolor,x		lda	cputime	and	#3	cmp	#3	bne	@finer	lda	PICanim,x	inc	a	sta	PICanim,x@finer:	lda	PICanim,x	and	#7	jsr	drawworldbob		stz	PICvomit,x		jsl	movebobonworld	jsr	mainscroll		lda	mapmovex			;when reached dest...	ora	mapmovey	beq @doexit	rtl	@doexit:	inc	maprob	jmp	@rezzedin		;walk	lda	PICcount,x			;wait a bit...	beq	@canexit	dec	a	sta	PICcount,x	jsl	PICput	dw	mapbob8@noexit:	jsr	mainscroll	rtl** finally reached...now teleport in*@canexit:	stz	PICanim,x	jsl	PICput	dw	mapbob8	jsr	mainscroll@canexit22:	jsl	TSKsuspend	jsr	abortdemo2	bcc	@noabort1x	jmp	@labelaa@noabort1x:;	jsr	abortdemo;	bcs	@walk2;;	bcc	@noabort3;;	jmp	@labelaa	;	rtl;@noabort3:;@walk2:	jsl	TSKsuspend	lda	#5	sta	PICcolor,x		lda	cputime	and	#7	cmp	#7	bne	@noper2	lda	PICanim,x	cmp	#7	bcs	@tisdone	inc	a	sta	PICanim,x	clc	adc	#22	jsr	drawworldbob		bra	@noper2@tisdone:	stz	PICadrLo,x		;gone!....wait 1 second	stz	PICadrHi,x	lda	PICanim,x	inc	a	cmp	#14	bcc	@notover	jmp	@labelaa@notover:	sta	PICanim,x@noper2:	jsr	mainscroll	rtl	** exit the damn world*@doneworld:	lda	#8	sta	PICbank,x	lda	PICdir,x	sta	PICxlo,x	lda	PICdirv,x	sta	PICylo,x		lda	#1	sta	PICcolor,x		lda	world	clc	adc	#11	jsr	drawworldbob	jsr	mainscroll		stz	PICanim,x	jsl	TSKsuspend		lda	fade	beq	@fadeoverxx	jsr	mainscroll	rtl@fadeoverxx:	stz	PICcount,x;	jsr	abortdemo;	bcs	@fly;	rtl;@fly	jsl	TSKsuspend;	lda	cputime;	and	#1;	bne	@half	lda	PICcount,x	tay	lda	leaveplanetx,y	cmp	#99	beq	@nextplanet	jsl	PICxadd	lda	leaveplanety,y	jsl	PICysub	inc	PICcount,x@half:	jsr	mainscroll	rtl@nextplanet:	jmp	@doneworld2	** major exit point!!!*@labelaa:	jsr	mainscroll	jsr	dofadeout	jsl	TSKsuspend	lda	fade	beq	@soccer	rtl@soccer:	lda	mapsequence	bne	@noworld@noworld:	lda	noshowpw	ora	demoflag		;ed bug	bne	@noshow	lda	givepassword	beq	@noshow	bpl	@showhim@noshow:	jmp	@entergame3@showhim:	sta	sgivepassword	lda	mapnumber	sta	temp+2	lda	givepassword	sta	mapnumber	jsr	buildpassword	lda	temp+2	sta	mapnumber		stz	gamestart	stz	maptype	inc	destroy				;remove buildings...	stz	bobready		jsl	TSKsuspend	jsl	TSKsuspend		jsr	loadpasswordscreen	;load bg stuff	lda	#1	sta	enterpassword		lda	#type_enemy	jsl	TSKschedule	dw	nextmessage	tay	lda	#13	sta	TSKbank,y		lda	#type_enemy	jsl	TSKschedule	dw	passwordrockgen	tay	lda	#7	sta	TSKbank,y		ldx	TSKcurrent		lda	#2	sta	PICcolor,x	lda	#8	sta	PICbank,x	lda	#1	sta	bobready	ldy	#0				;build the password frame@adamloop2:	lda	passwordframe,y	sta	combo,y	iny	cpy	#19	bcc	@adamloop2		lda	#1	sta	blinkyflag			jsl	@worryingme		;draw digits first time	lda	#16				;wait for rocks to scroll...	jsl	TSKwait		jsr	drawwinpass		jsr	dofadein2			jsl	TSKsuspend	lda	fade			;fade and show to user	beq	@showpassword	jsr	movepwstars	rtl** ok...show the password*@showpassword:	jsr	movepwstars	lda	debounce+1		;user wants to start	and	#JoyStart	bne	@entergame2	rtl@entergame2:	jsr	dofadeout		;kill screen;	lda	#-1					;else wait for fade....;	sta	volumedir;	lda	#$ff;	sta	volume	jsl	TSKsuspend;	lda	volumedir;	bne	@nofade	lda	fade	beq	@done2@nofade:	jsr	movepwstars	rtl** enter game*@entergame3:@done2:	stz	blinkyflag	stz	enterpassword	stz	destroy	stz	Hpos3	stz	Hpos3+1	** ok set up start state*	inc	destroy				;remove buildings...	stz	bobready		jsl	TSKsuspend	jsl	TSKsuspend		stz	PICxhi,x	stz	PICyhi,x		stz	PICcolor,x** debug fix*;	inc	mapsequence;	jmp	@doworldmaps******	lda	mapnumber2	sta	mapnumber			lda #1	sta sdmaflag			;make sure accidental enemy dma doesn't occur		stz borgweaponflag	lda	#1					;do teleport in....	sta	doteleport	@noteleport:	jsr	loadwholekit	;charsets, etc		lda	mapnumber			;boss power meter	asl	a	tay	lda	fightboss,y	sta	bosslevel	lda	fightboss+1,y	sta	givepassword		lda	#type_bob	jsl	TSKschedule	dw	weapondribble** set character lookup stuff*	lda	maptype2		;collision stuff	cmp	#borglevel2	bcc	@finest	lda	#borglevel		@finest:	sta	maptype		lda	maptype			;all others...	bne	@fineta	ldy	mapnumber		;screen lifter	cpy	#40	bne	@others	lda	#12	bne	@fineta@others:	lda	world	beq	@fineta			;borg world 1	cmp	#1	beq	@10	lda	#11				;borg world 3	bne	@fineta@10:		lda	#10				;borg world 2@fineta:	asl	a	tay	lda	charactersets,y	sta	charlookup	lda	charactersets+1,y	sta	charlookup+1	** load correct sound bank*		ldy	maptype				;if music already playing...ignore	lda	soundbank,y	sta	PICtemp1,x	cmp	currentmusic	beq	@soundplaying	;	lda	#-1;	sta	volumedir;	lda	#$ff;	sta volume;	jsl	TSKsuspend;	lda	volumedir;	beq	@quiet;	rtl;@quiet:	stz	gamestart	    lda	#ForcedBlankOn		;then load correct sound	sta	INIDISP		lda	PICtemp1,x		sta	currentmusic	bne	@try1	jsr initsound	bra	@ignore22@try1:	cmp	#1	bne	@try2	jsr	initsound2	bra	@ignore22@try2:	jsr	initsound3@ignore22:@bagged:	lda	#$ff					;and crank!	jsl	soundeffects	sta	volume		lda	#ForcedBlankOff	sta	INIDISP@soundplaying:		lda	bosslevel	beq	@noboss	lda	#7	bne	@setmusic@noboss:	ldy	maptype	lda	whichthememusic,y	cmp	#2	beq	@nomusic@setmusic:	sta	APU_PORT0@nomusic:@musicdone:	lda	#1	sta	gamestart		jmp	bobtask		** load the world map stuff*worldpalx:	dc.b 8,27,28	loadworldmap:	stz	gamestart	stz	Hpos3		stz	winflag2	stz	PICanim,x		lda	#0	sta	PICcolor,x		lda	mapnumber	sta	mapnumber2		ldy	world	lda	whichworldmap,y	sta	mapnumber	lda	#worldlevel	sta	maptype		jsr	loadwholekit		jsl setworldscroll		;in worldbob.asm...	lda	mapsequence	beq	@notfirst		lda	#ForcedBlankOn		;turn off vertical blank	sta	INIDISP	jsr	getfamily1		lda	#ForcedBlankOff		;turn off vertical blank	sta	INIDISP@notfirst:** load any ancient clouds*@clouds:	lda	#1	sta	bobready		sta	gamestart	rts	** make sure password matches...*correlatepassword:	phb	lda	#4	pha	plb		stz	temp	stz	passwordcheat		lda	#<passwords	sta	tmp	lda	#>passwords	sta	tmp+1	bra	@ignorefirst	@loop1:	lda	tmp	clc	adc	#8	sta	tmp	bcc	@ignorefirst	inc	tmp+1@ignorefirst:	ldy	#0@loop2:	iny	iny	lda	(tmp),y	dey	dey	sta	temp+2	cpy	#1	bne	@notcheat	lda	realcomboframe,y	cmp	#9	bne	@notcheat	inc	passwordcheat	bra	@cheatmatch@notcheat:	lda	realcomboframe,y	cmp	temp+2	bne	@nomatch@cheatmatch:	iny	cpy	#6	bcc	@loop2	** ok...setup the match if correct...*	lda	(tmp)	cmp	#-1	beq	@nomatch	sta world				;get world	lda	temp	sta	mapnumber			;save mapnumber	plb	lda	world	asl	a	tay	lda	allthemaps,y	sta	tmp	lda	allthemaps+1,y	sta	tmp+1	ldy	#-1@loop1a:	iny	lda	(tmp),y				;and calculate correct sequence	cmp	mapnumber	bne	@loop1a@done:	sty	mapsequence	sec	rts	** keep searching*@nomatch:	inc	temp	lda	temp	cmp	#60	bcc	@loop1	stz	world	stz	mapnumber	plb	clc	rts		** load entire new system*loadwholekit:		lda	#ForcedBlankOn		;turn off vertical blank	sta	INIDISP	stz	canlookdown		ldy	world	lda	maxmaps,y	sta	maxlevels		lda	mapnumber			;bob's status	asl	a	tay	lda	bobstartstate,y	cmp	#falling	beq	@setstate	cmp	#onworld	beq	@setstate	inc	canlookdown	lda	#falling@setstate:	sta	status@nostart:	lda	bobstartstate+1,y	;what to say	sta	bobentrytext		lda	deathpointer	inc	a	sta	deathpointer	and	#15	tay	lda	possibletext,y	sta	bobdeathtext		lda	winningpointer	inc	a	sta	winningpointer	and	#7	tay	lda	possibletext2,y	sta	bobwintext		ldy	mapnumber	lda	parallaxtype,y		;what kind of parallax	bmi	@noparallax	sta	parallaxnumber	ldy	#1	jsr	drawscreen@noparallax:		ldy	mapnumber	lda	mapvstart,y	sta edmapcountv				lda	#1					;control panel	ldy	#2					;on screen 3	jsr	drawscreen	jsr	turnonwindows		;and window mask	lda	mapnumber	jsr	initscroll			;foreground		jsr	loadallchars		;all characters		lda	doteleport	beq	@noteleport	jsr	loadrezchars@noteleport:	jsr	levelkludge			;anything special...		lda	#0	pha	plb		ldy	mapnumber			;task lists	lda	whichtasklist,y	jsl	init_tasktable	ldy	mapnumber	lda	whichtasklist,y	jsl inittaskmap			;set addr of task map table for this zone	stz	seconds		ldy	mapnumber	lda	leveltime,y	bpl	@nosecs	ldy	#30					;neg are 30 seconds	sty	seconds	eor	#255	inc	a@nosecs:	sta	minutes		ldx	TSKcurrent		lda	#ForcedBlankOff			sta	INIDISP	rts** load the introduction stuff*	0=intro*	1+2 are inbetween worlds*	3=ending*whichintrochars:	dc.b 14,15,16,14whichintromap:	dc.b 45,58,57,45whichintrocolors:	dc.b 11,31,32,11	loadtheintro:	lda	#ForcedBlankOn			sta	INIDISP	lda	#6						sta	temp	lda	#0						sta	temp+1	lda	#$60	sta	temp+2	stz	temp+3	lda	#<int3char			;star field 3	ldy	#>int3char	jsr	FillBGCharacter		lda	#15	ldy	#2	jsr	drawscreen		lda	#13					jsr	loadbgchars		lda	#7				jsr	FIllbgcolors2		ldy	introtype	lda	whichintrocolors,y		jsr	Fillspritecolors2		jsr	turnonwindows		lda	#14	ldy	#1	jsr	drawscreen	lda	#BG1MainOff+BG2MainOff+BG3MainOff+ObjMainOff	sta	TM		lda	#4	jsr	loadgoodsprites2	ldy	introtype	lda	whichintrochars,y	jsr	loadbadsprites		ldy	introtype	lda	whichintromap,y	jsr	initscroll	lda	#ForcedBlankOff			sta	INIDISP	rts		** load the sprites for bob's dad and diner*loaddate:	lda	#13	bne	setbgpicloaddad:	lda	#12setbgpic	sta	temp+7		lda	#ForcedBlankOn			sta	INIDISP		jsr	loadstarfield		lda	#13					jsr	loadbgchars		lda	temp+7					;house or diner	ldy	#0	jsr	drawscreen		lda	#7					jsr	FIllbgcolors2		lda	#30	jsr	Fillspritecolors2		jsr	turnonwindows	lda	#BG1MainOff+BG2MainOff+BG3MainOff+ObjMainOff	sta	TM		lda	#4	jsr	loadgoodsprites2	lda	#2					;dad frames	jsr	loadbadsprites	lda	#ForcedBlankOff			sta	INIDISP	rts	** load the ending stuff*loadending:	lda	#ForcedBlankOn			sta	INIDISP		lda	#2					;dad frames	jsr	loadbadsprites	lda	#7					jsr	loadbgchars		lda	#21					;ending rock	ldy	#0	jsr	drawscreen		jsr	turnoffwindows	lda	#ForcedBlankOff			sta	INIDISP	rts		** generic load starfield*loadstarfield:	stz	Hpos	stz	Vpos	stz	BG1VOFS	stz	BG1VOFS	stz	BG1HOFS	stz	BG1HOFS	lda	#6						sta	temp	lda	#0						sta	temp+1	lda	#$60	sta	temp+2	stz	temp+3	lda	#<int3char			;star field 3	ldy	#>int3char	jsr	FillBGCharacter			lda	#15	ldy	#2	jsr	drawscreen		lda	#14	ldy	#1	jsr	drawscreen	rts	** load graymatter logo*loadgraymatter:	lda	#ForcedBlankOn			sta	INIDISP		jsr	loadstarfield	lda	#5	jsr	loadgoodsprites2		lda	#13					jsr	loadbgchars		lda	#3					jsr	FIllbgcolors2		lda	#0	ldy	#0	jsr	drawscreen		lda	#33	jsr	Fillspritecolors2	lda	#21	jsr	loadbadsprites		lda	#ForcedBlankOff			sta	INIDISP		rts		loadgraymatter2:	lda	#type_enemy	jsl	TSKschedule	dw	graylogo0		lda	#type_enemy	jsl	TSKschedule	dw	graylogo1		lda	#type_enemy	jsl	TSKschedule	dw	graylogo2	rts	** load password screen stuff*loadpasswordscreen:		lda	#ForcedBlankOn			sta	INIDISP		jsr	loadstarfield	lda	#13					jsr	loadbgchars		lda	#0	ldy	#0	jsr	drawscreen		lda	#1	jsr	Fillspritecolors2		lda	#3					jsr	FIllbgcolors2		jsr	turnoffwindows			lda	#1	jsr	loadgoodsprites2	lda	#4	jsr	loadbadsprites		lda	#ForcedBlankOff			sta	INIDISP		rts	** load logo screen stuff*loadlogoscreen:		lda	#ForcedBlankOn			sta	INIDISP		stz	Hpos	stz	Vpos	stz	BG1VOFS	stz	BG1VOFS	stz	BG1HOFS	stz	BG1HOFS	jsr	loadstarfield	lda	#0				;kill planets	ldy	#1	jsr	drawscreen		lda	#7					jsr	loadbgchars	lda	#9	jsr	loadbadsprites		lda	#3					jsr	FIllbgcolors2		lda	#6	jsr	FIllspritecolors2		jsr	turnoffwindows		lda	#7			;drop main picture over it....		ldy	#0	jsr	drawscreen		lda	#24	jsr	upscroll	jsr	mainscroll		lda	#ForcedBlankOff			sta	INIDISP	lda	#1	sta	introflag		lda	#type_enemy	jsl	TSKschedule	dw	bobseyes	tay	lda	#1	sta	TSKbank,y		lda	#type_enemy	jsl	TSKschedule	dw	bobsgun	tay	lda	#1	sta	TSKbank,y	rts		** load character sets*loadallchars:	lda	#ForcedBlankOn		;turn off vertical blank	sta	INIDISP			lda	maptype2				;bg chars	jsr	loadbgchars	lda	#1						sta	temp	lda	#0						sta	temp+1	lda	#$60	sta	temp+2	stz	temp+3	lda	#<scr3char			;control panel	ldy	#>scr3char	jsr	FillBGCharacter		lda	mapnumber	jsr	loadgoodsprites	lda	mapnumber	asl	a	inc	a	tay	lda	whichsprites,y	jsr	loadbadsprites		jsr	FIllspritecolors		jsr	FIllbgcolors** animc set chars fudge*	ldy	maptype2	lda	animset,y	beq	@noway	dec	a	sta temp+6	asl	a	asl	a	tay	lda	animsetchars,y	sta	tmpd	iny	lda	animsetchars,y	sta	tmpd+1	iny	lda	animsetchars,y	sta	tmpd+6		lda	#$7e	sta	tmpd+7		lda	temp+6	asl	a	tay	lda	eanimsetchars,y	sta	tmpd+2	iny	lda	eanimsetchars,y	sta	tmpd+3		lda	#<$b000	sta	tmpd+4	lda	#>$b000	sta	tmpd+5		jsl	decomp@noway:		lda	#ForcedBlankOff			sta	INIDISP	rts** load rez chars directly into dma set*loadrezchars:	lda	#ForcedBlankOn		;turn off vertical blank	sta	INIDISP		lda #<$4000+(160*16)	sta VMADDL	lda #>$4000+(160*16)	sta VMADDH		lda	#<(32*352) 	sta	$4305			; # of bytes low	lda #>(32*352)	sta	$4306			; # of bytes high		stz	HDMAEN		; turn off h-dma	lda	#%00000001	sta	$4300			; dma mode	lda	#<VMDATAWL		; which channel for DMA	sta	$4301			; b-bus addr	lda	#31	sta	$4304			; bank #		lda	#<rezobj0		;anim data lo	sta	$4302			; a-bus low addr	lda	#>rezobj0		;anim data hi	sta	$4303			; a-bus high addr	lda	#1	sta	MDMAEN		; turn on dma		lda	#ForcedBlankOff		;turn off vertical blank	sta	INIDISP	rts	** load upper sprites*loadgoodsprites:	asl	a	tay	lda	whichsprites,y		sta	temp	asl	a	asl	a	bra	andloadthemloadgoodsprites2:	sta	temp	asl	a	asl	aandloadthem	tay	lda	spritecharsets,y		;adr lo	sta	tmpd		iny	lda	spritecharsets,y		;adr hi	sta	tmpd+1	iny	lda	spritecharsets,y		;source...	sta	tmpd+6							lda	#$7f					;end	sta	tmpd+7		lda	temp	asl	a	tay	lda	espritecharsets,y	sta	tmpd+2	lda	espritecharsets+1,y	sta	tmpd+3		lda	#0					sta	tmpd+4	sta	tmpd+5	jsl	decomp		lda #<$4000	sta VMADDL	lda #>$4000	sta VMADDH		lda	#<(32*160) 	sta	$4305			; # of bytes low	lda #>(32*160)	sta	$4306			; # of bytes high		jmp	download7f	** load lower half of sprites*		acc has entry number*	loadbadsprites:	sta	tmpd+4	asl	a	asl	a	tay	lda	badspritecharsets,y		;adr lo	sta	tmpd	iny	lda	badspritecharsets,y		;adr hi	sta	tmpd+1	iny	lda	badspritecharsets,y		;page...	sta	tmpd+6			lda	#$7f					;end	sta	tmpd+7		lda	tmpd+4	asl	a	tay	lda	ebadspritecharsets,y	sta	tmpd+2	lda	ebadspritecharsets+1,y	sta	tmpd+3		lda	#0					sta	tmpd+4	sta	tmpd+5	jsl	decomp		lda #<$4000+(160*16)	sta VMADDL	lda #>$4000+(160*16)	sta VMADDH		lda	#<(32*352) 	sta	$4305			; # of bytes low	lda #>(32*352)	sta	$4306			; # of bytes high		jmp	download7f** load background characters*		acc has mapnumber*loadbgchars:		sta	tmpd+4	asl	a	asl	a	tay	lda	bgcharsets,y	sta	tmpd	iny	lda	bgcharsets,y	sta	tmpd+1	iny	lda	bgcharsets,y		;page...	sta	tmpd+6		lda	#$7f	sta	tmpd+7		lda	tmpd+4	asl	a	tay	lda	ebgcharsets,y	sta	tmpd+2	iny	lda	ebgcharsets,y	sta	tmpd+3		lda	#0	sta	tmpd+4	sta	tmpd+5		jsl	decomp	lda #<$2000	sta VMADDL	lda #>$2000	sta VMADDH		lda	#<(32*512) 	sta	$4305			; # of bytes low	lda #>(32*512)	sta	$4306			; # of bytes high	;	jsr	download7f;	rts		** page 7f dma download*download7f:	stz	HDMAEN		; turn off h-dma	lda	#%00000001	sta	$4300			; dma mode	lda	#<VMDATAWL		; which channel for DMA	sta	$4301			; b-bus addr	lda	#$7f	sta	$4304			; bank #		lda	#0				;anim data lo	sta	$4302			; a-bus low addr	lda	#0				;anim data hi	sta	$4303			; a-bus high addr	lda	#1	sta	MDMAEN		; turn on dma	rts	** background colors*FillBGColors:	lda	mapnumber		;multiple types...	asl	a	inc	a	tay	lda	whichpalletes,yFillBGColors2:	asl	a	asl a	tay	lda	bgpalletes,y	sta	tmp			;addr hi	iny	lda	bgpalletes,y	sta	tmp+1			;addr lo	iny	lda	bgpalletes,y	;page	sta	temp+1		iny	lda	bgpalletes,y	sta	temp		;fill first 20?		lda	temp+1	pha	plb		lda	temp	beq	@less	lda	#$00	sta	CGADD		; set Color RAM address to zero	jsr	fill128	bra	@exeter** patch first 20...always the same...*	@less:	lda	#20	sta	CGADD	jsr	fill128not		lda	#<firsttwenty	sta	tmp	lda	#>firsttwenty	sta	tmp+1	lda	#$00	sta	CGADD		; set Color RAM address to zero	jsr	fill20@exeter:	lda	#0	pha	plb	rts	** sprite colors*Fillspritecolors:	lda	mapnumber	asl	a	tay	lda	whichpalletes,yFillspritecolors2:	asl	a	asl	a	tay	lda	spritepalletes,y	sta	tmp					;addr hi	iny	lda	spritepalletes,y	sta	tmp+1				;addr lo	iny	lda	spritepalletes,y	;page	sta	temp+1	iny	lda	spritepalletes,y	sta	temp		;fill first 20?		lda	temp+1	pha	plb	lda	#$80	sta	CGADD		jsr	fill128		lda	temp	bne	@done		lda	#$80+$60	sta	CGADD	lda	#<lastthirtytwo	sta	tmp	lda	#>lastthirtytwo	sta	tmp+1		jsr	fill32	@done:		lda	#0	pha	plb		rts** any special level kludges....*levelkludge:	lda	#ForcedBlankOn			sta	INIDISP	stz	bossbehind		lda	mapnumber	cmp	#13	bne	@see15	** queen bug*		lda	#6					;page			sta	temp	lda	#0							sta	temp+1	lda	#$30				;dest addr...	sta	temp+2	lda	#128				;number of chars	sta	temp+4	lda	#<queenchar			;source	ldy	#>queenchar	jsr	PartFillbgchar		jmp	@kludgeexit	@see15:;	cmp	#14;	bne	@fuckoff;	** borg snake boss*;	;	lda	#11						;page		;	sta	temp;	lda	#0						;	sta	temp+1;	lda	#$30					;dest addr...;	sta	temp+2;	lda	#64						;number of chars;	sta	temp+4;	lda	#<snakechars			;source;	ldy	#>snakechars;	jsr	PartFillbgchar;;	jmp	@kludgeexit@fuckoff:;	cmp	#31;	bne	@fuckoff2** flower pod arm boss*		;	lda	#10					;page		;	sta	temp;	lda	#0						;	sta	temp+1;	lda	#$30				;dest addr...;	sta	temp+2;	lda	#127				;number of chars;	sta	temp+4;	lda	#<podbossoverlay	;source;	ldy	#>podbossoverlay;	jsr	PartFillbgchar;	;	jmp	@kludgeexit	** ultra force parallax*@fuckoff2:	cmp	#54	bne	@fuckoff3		lda	#11					;page			sta	temp	lda	#0							sta	temp+1	lda	#$30				;dest addr...	sta	temp+2	lda	#128				;number of chars	sta	temp+4	lda	#<virusbgchars	ldy	#>virusbgchars	jsr	PartFillbgchar		jmp	@kludgeexit	** screen lifter*@fuckoff3:	cmp	#40	bne	@fuckoff4	lda	#%00100000	sta	bossbehind	** end...*@fuckoff4:@kludgeexit:	lda	#ForcedBlankOff			sta	INIDISP	rts	**  initialize scroll data values*initscroll:		sta mappointer			lda	#ForcedBlankOn		sta	INIDISP				lda #<screenram		sta haddr		sta vaddr		lda #>screenram		sta haddr+1		sta vaddr+1				stz Hpos				;reset scroll register shadows		stz Hpos+1		stz Vpos		stz blockcounth		;reset pixel counters for within each map block		stz blockcountv				stz mapcounth		;reset map block offsets		stz	mapcountv				stz sideoffset		stz topoffset				stz lsdir		stz hpos_old		stz changeflag		stz startblowing		** game map boot up*		lda	mappointer		sta	mappointer2				lda	mappointer		cmp	#32		bcc	@set1		sec			sbc	#32		asl a		asl a		asl	a		tay		lda maptable2+3,y		sta mapwidth		;set width		lda maptable2,y		;map addr lo		pha		lda maptable2+1,y		;map addr hi		pha		lda maptable2+2,y		;map bank		sta	temp		lda	maptable2+4,y		;map start lo		sta	map					lda	maptable2+5,y		;map start hi		sta	map+1		lda	maptable2+6,y		;blockset		sta	temp+6		lda	maptable2+7,y		;maptype		sta	maptype2		sta	mappointer		bra	@extractother		@set1:					lda mappointer		asl a		asl a		asl	a		tay		lda maptable+3,y		sta mapwidth		;set width		lda maptable,y		;map addr lo		pha		lda maptable+1,y		;map addr hi		pha		lda maptable+2,y		;map bank		sta	temp		lda	maptable+4,y		;map start lo		sta	map					lda	maptable+5,y		;map start hi		sta	map+1		lda	maptable+6,y		;blockset		sta	temp+6		lda	maptable+7,y		;maptype		sta	maptype2		sta	mappointer@extractother:	lda	temp+6	cmp	#16	bne	@ok	lda	#10	sta	temp+6@ok:	asl	a	asl	a	tay	lda	#<$e000		sta	blockaddress	lda	#>$e000 	sta	blockaddress+1	lda	#$7e		sta	blockpage				lda	blocksets,y	sta	tmpd	iny	lda	blocksets,y	sta	tmpd+1	iny	lda	blocksets,y	sta	tmpd+6		lda	#$7e	sta	tmpd+7		lda	temp+6	asl	a	tay	lda	eblocksets,y	sta	tmpd+2	iny	lda	eblocksets,y	sta	tmpd+3		lda	#<$e000	sta	tmpd+4	lda	#>$e000	sta	tmpd+5		jsl	decomp@nodecomp: 	** special world map fix*;	lda	status;	cmp	#onworld;	bne	@regpointers;	jsl	setworldscroll		** decompress map and extract...*@regpointers:		ply	sty	tmpd+1		;source addr hi	pla	sta	tmpd		;source addr lo	lda	temp		;source page num	sta	tmpd+6		lda	#$7f		;dest page	sta	tmpd+7		lda	mappointer2	;end source address	asl	a	tay	lda	endmapaddress,y	sta	tmpd+2	iny	lda	endmapaddress,y	sta	tmpd+3		lda	#0			;dest addr	sta	tmpd+4	sta	tmpd+5	jsl	decomp	;		ldx	temp;		ply;		pla		jsr makemap				;expand the map			jsr clearscroll		* draw a full screen of scrolling data		stz	setup_counter		setup_scroll:	lda #8	jsr leftscroll		stz changeflag	stz lsdir		jsr mainscroll		inc setup_counter	lda setup_counter	cmp #32	bcs @donesetup		jmp setup_scroll	@donesetup:;--------------;	lda #24;	sta blockcounth;	sta blockcounth_old	;	lda map;	sec;	sbc #1;	sta map;	bcs @ok;	dec map+1;@ok:	stz hpos	stz hpos_old		lda	#ForcedBlankOff	sta	INIDISP	rts** build the inventory screen on the parallax screen*showinventory:	lda	#ForcedBlankOn			sta	INIDISP	lda	#%00000000		;vblank on/v-irq on/joy on	sta	NMITIMEN	;	lda	Hpos2			;save Hpos			;	sta	savehpos2;	lda	Vpos2;	sta	savevpos2	;	stz	BG2HOFS;	stz	BG2HOFS;;	stz	Hpos2;	lda	#64-16;	sta	BG2VOFS;	sta	BG2VOFS;;	sta	Vpos2	** load bg colors*	lda	#$00	sta	CGADD		lda	#<invenpal	sta	tmp	lda	#>invenpal	sta	tmp+1		lda	#8	pha	plb		jsr	fill128		lda	#$00	sta	CGADD		lda	#<firsttwenty	sta	tmp	lda	#>firsttwenty	sta	tmp+1			jsr	fill20	lda	#0	pha	plb** load sprite colors*	lda	#$80	sta	CGADD		lda	#<iconpal	sta	tmp	lda	#>iconpal	sta	tmp+1		lda	#6	pha	plb		jsr	fill128		lda	#0	pha	plb		lda	#invpalnum	jsr	loadbgchars	lda	#6	jsr	loadbadsprites		lda	#invscrnum		;draw inventory screen	ldy	#1				;on screen 2	jsr	drawscreen	jsl	buildinventory	;light up stuff		jsl	doweaponcount	;intuitive weapon select	lda	#ForcedBlankOff		sta	INIDISP		lda	#%10100001		;vblank on/v-irq on/joy on	sta	NMITIMEN			lda	#4	sta	pausehold		rts		** rebuild correct parallax after inventory is done*	removeinventory:	lda	#ForcedBlankOn			sta	INIDISP	lda	#%00000000		;vblank on/v-irq on/joy on	sta	NMITIMEN			lda	#ForcedBlankOn			sta	INIDISP;	lda	savehpos2		;restore scroll...;	sta	Hpos2;	lda	savevpos2;	sta	Vpos2		stz borgweaponflag	jsr	FIllspritecolors	;colors	jsr	FillbgColors			;reload colors			lda	maptype2				;get back the character set	jsr	loadbgchars		lda	mapnumber	asl	a	inc	a	tay	lda	whichsprites,y	jsr	loadbadsprites	jsr	levelkludge		lda	#ForcedBlankOn			sta	INIDISP		lda	parallaxnumber		;redraw parallax	ldy	#1					;on screen2	jsr	drawscreen	lda	#ForcedBlankOn			sta	INIDISP	jsr	turnonwindows				lda	#BG1MainOn+BG2MainOn+BG3MainOn+ObjMainOn	sta	TM		lda	invensdma			;re-gen any stuff	beq	@nodma	sta sdmaflag	stz	sdmacount@nodma:	lda	#ForcedBlankOff			sta	INIDISP		lda	#%10100001		;vblank on/v-irq on/joy on	sta	NMITIMEN		ldx	TSKcurrent		lda	#8	sta	pausehold			rts	** get correct pointers for map progression*extractworld:	lda	world				;extract world info	asl	a	tay	lda	allthemaps,y	sta	tmp	lda	allthemaps+1,y	sta	tmp+1	rts	** bob on world*drawworldbob:	asl	a	tay	lda	walkworld,y	sta	tmp	lda	walkworld+1,y	sta	tmp+1	jsl	PICput2	rts	** world map frames*	walkworld	dc.w	mapbob0			;walk on planet	dc.w	mapbob1	dc.w	mapbob2	dc.w	mapbob3	dc.w	mapbob4	dc.w	mapbob5	dc.w	mapbob6	dc.w	mapbob7worldcars:					;+8	dc.w	mapbob31		;enter 0	dc.w	mapbob30		;enter 1	dc.w	mapbob32		;enter 2	dc.w	mapbob33		;leave 0 +11	dc.w	mapbob35		;leave 1	dc.w	mapbob34		;leave 2	dc.w	mapbob26		;explosion	dc.w	mapbob27		dc.w	mapbob28	dc.w	mapbob28fheadspin:	dc.w	mapbob9	dc.w	mapbob10	dc.w	mapbob11	dc.w	mapbob10	dc.w	mapbob12		;teleport in....	dc.w	mapbob13	dc.w	mapbob14	dc.w	mapbob15	dc.w	mapbob16	dc.w	mapbob17	dc.w	mapbob18	dc.w	mapbob19		** move the star scroll*movestarscroll:	sta	temp	phb	lda	#0	pha	plb	lda	temp	jsr	leftscroll	jsr	mainscroll		plb	rtl	** make bob global*globalizebob:	lda	PICxhi,x		;globalize	sta	bobxposhi	lda	PICxlo,x	sta	bobxpos	lda	PICylo,x	sta	bobypos	lda	PICyhi,x	sta	bobyposhi	rts		** build the correct password for the select screen*buildpassword:	phb	lda	#4	pha	plb	lda	mapnumber	SET16	and	#$00FF	asl	a	asl	a	asl	a	sta	temp	clc	adc	#passwords	clc	adc	#2	sta	tmp	SET8	@nowrap:	ldy	#0@loop	lda	(tmp),y	sta	realcomboframe,y	iny		cpy	#6	bcc	@loop	plb	rts			** scroll stuff while password is being entered*movepwstars:	lda	cputime	and	#1	beq	movescreen3	inc	Hpos2movescreen3	lda	cputime	and	#3	cmp	#3	bne	@nofuck	inc	Hpos3@nofuck:	rts	** gray matter logo stuff*graylogo0:	jsl	PICput	dw	graylogopic0	lda	#80	sta	PICxlo,x	lda	#96	sta	PICylo,x	jmp	logowaitgraylogo1:	jsl	PICput	dw	graylogopic1	lda	#80+112	sta	PICxlo,x	lda	#96-24	sta	PICylo,x	jmp	logowaitgraylogo2:	jsl	PICput	dw	graylogopic2	lda	#80+80	sta	PICxlo,x	lda	#96+84	sta	PICylo,xlogowait:	lda	#24	sta	PICbank,x	jsl	TSKsuspend	lda	funnyhead	bne	@endit	rtl@endit:	jml	TSKcancel** stick scan*abortdemo:	lda	debounce	ora	debounce+1	beq	@noabort	sec	rts@noabort:	clc	rtsabortdemo2:	lda	debounce+1	and	#Joystart	beq	@noabort	sec	rts@noabort:	clc	rts	** show winning password*drawwinpass:		ldy	realcomboframe	lda	passworddigits,y	sta	combo+3	ldy realcomboframe+1	lda	passworddigits,y	sta	combo+6	ldy	realcomboframe+2	lda	passworddigits,y	sta	combo+9	ldy	realcomboframe+3	lda	passworddigits,y	sta	combo+12	ldy	realcomboframe+4	lda	passworddigits,y	sta	combo+15	ldy	realcomboframe+5	lda	passworddigits,y	sta	combo+18	lda	#$88	sta	PICxlo,x		lda	#$90-4-32	sta	PICylo,x	jsl	PICput	dw	combo		rts	** bob on title screen*bobpointup:		;point up dc.b $09 dc.b $13,$D8,$4E dc.b $0B,$D0,$4C dc.b $47,$D8,$AC dc.b $03,$98,$8E dc.b $4D,$98,$8C dc.b $03,$88,$6E dc.b $4D,$88,$6C dc.b $55,$C8,$50 dc.b $45,$C8,$52bobpointdown:		;point down dc.b $09 dc.b $13,$80,$2E dc.b $0B,$C8,$2C dc.b $47,$D8,$AC dc.b $03,$98,$8E dc.b $4D,$98,$8C dc.b $03,$88,$6E dc.b $4D,$88,$6C dc.b $55,$C8,$50 dc.b $45,$C8,$52	