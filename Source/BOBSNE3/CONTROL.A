** control panel module and chip manipulation*RED		EQU	%0010100000000000		;color familiesGREEN	EQU	%0010110000000000		BLUE	EQU	%0011000000000000YELL	EQU	%0010010000000000REDL	EQU	%00101000				;color familiesGREENL	EQU	%00101100	BLUEL	EQU	%00110000YELLL	EQU	%00100100REDL2	EQU	%00101001			;color familiesGREENL2	EQU	%00101101	BLUEL2	EQU	%00110001YELL2	EQU	%00100101			wshow:	dc.w	GREEN+236,GREEN+237,GREEN+238,GREEN+239	;gun	dc.w	GREEN+240,GREEN+241,GREEN+242,GREEN+243	;uzi	dc.w	GREEN+244,GREEN+245,GREEN+246,GREEN+247 ;flame	dc.w	GREEN+256,GREEN+257,GREEN+258,GREEN+259 ;missile	dc.w	GREEN+252,GREEN+253,GREEN+254,GREEN+255	;beam	dc.w	GREEN+248,GREEN+249,GREEN+250,GREEN+251	;sonic boom	dc.w	GREEN+236,GREEN+237,GREEN+238,GREEN+239 ;scooter weapon		dc.w	GREEN+236,GREEN+237,GREEN+238,GREEN+239 ;space laser	dc.w	0,0,0,0rshow:	dc.w	BLUE+284,BLUE+285,BLUE+286,BLUE+287	;flash bulb	dc.w	BLUE+288,BLUE+289,BLUE+290,BLUE+291	;shield	dc.w	BLUE+292,BLUE+293,BLUE+294,BLUE+295	;parachute	dc.w	BLUE+296,BLUE+297,BLUE+298,BLUE+299	;trampoline	dc.w	BLUE+300,BLUE+301,BLUE+302,BLUE+303	;copter	dc.w	BLUE+304,BLUE+305,BLUE+306,BLUE+307	;beaerker	dc.w	0,0,0,0		XOFFSET	EQU	48** select 1 of 3 colors for energy/strength (48 max)*		acc has value*choosecolor:	cmp	#12	bcs	@larger	lda	#REDL2	bra	@setit@larger:	cmp	#24	bcs	@largest	lda	#YELL2	bra	@setit@largest:	lda	#GREENL2@setit:	sta	coloradd	rts** update all vars on the control panel*updatepanel:	phb	lda	#16	pha	plb		lda	strength	cmp	shstrength	beq	@noneed2	bcc	@lower1	inc	shstrength	lda	shstrength	bra	@pastlower1@lower1:		sta	shstrength@pastlower1:	sta	temp	jsr	choosecolor	lda	#12	sta	barsize	lda	#<strengthbuffer	ldy	#>strengthbuffer	jsr	buildbar		@noneed2:	lda	bosslevel	beq	@noneed3	lda	bossstrength	cmp	#48	bcc	@sizeisfine	lda	#48@sizeisfine:	cmp	shbossstrength	beq	@noneed3	bcc	@lower2	inc	shbossstrength	lda	shbossstrength	bra	@pastlower2@lower2:		sta	shbossstrength@pastlower2:	sta	temp	jsr	choosecolor	lda	#12	sta	barsize	lda	#<bossbuffer	ldy	#>bossbuffer	jsr	buildbar		@noneed3:	** weapon/utitlity/remote types*	ldx	#0	lda	weapon	bpl	@fine2	lda	#8@fine2:	asl	a	asl	a	asl	a	tay	SET16	lda	wshow,y	sta	rweapontype,x	iny	iny	ldx	#2	lda	wshow,y	sta	rweapontype,x	iny	iny		ldx	#0	lda	wshow,y	sta	rweapontype2,x	iny	iny	ldx	#2	lda	wshow,y	sta	rweapontype2,x	SET8		ldx	#0	lda	remote	bpl	@fine@nil	lda	#6@fine:	asl	a	asl	a	asl	a	tay	SET16	lda	rshow,y	sta	rremotetype,x	iny	iny	ldx	#2	lda	rshow,y	sta	rremotetype,x	iny	iny		ldx	#0	lda	rshow,y	sta	rremotetype2,x	iny	iny	ldx	#2	lda	rshow,y	sta	rremotetype2,x	SET8	** weapon count*		ldy	weapon			bpl	@fine5	stz	temp	stz	temp+1	stz	temp+2	stz	temp+3	bra	@nothing2@fine5:	lda	weaponcount,y	jsr	numtoascii@nothing2:	SET16	lda	temp	clc		adc	#GREEN	sta	rweaponcount		lda	temp+2	clc	adc	#GREEN	sta	rweaponcount+2	SET8	** remote count*	lda	remote	bpl	@fine3@nil2:	stz	temp	stz	temp+1	stz	temp+2	stz	temp+3	bra	@nothing@fine3:	tay	lda	remotecount,y	jsr	numtoascii@nothing:	SET16	lda	temp	clc		adc	#BLUE	sta	rremotecount		lda	temp+2	clc	adc	#BLUE	sta	rremotecount+2	SET8	** number of lives*	lda	lives	jsr	numtoascii		SET16		lda	temp	clc	adc	#RED	sta	boblife		lda	temp+2	clc	adc	#RED	sta	boblife+2			SET8	** time left*	lda	status	cmp	#teleported	beq	@timeisleft	lda	scooterwin	bne	@timeisleft	lda	minutes	bne	@timeisleft	lda	seconds	cmp	#10	bcs	@timeisleft		;blink when run out	lda	cputime	and	#4	cmp	#4	beq	@timeisleft	stz	timeleft	stz	timeleft+1		stz	timeleft+4	stz	timeleft+5		stz	timeleft+6	stz	timeleft+7		ldx	TSKcurrent		plb	rtl	@timeisleft:	lda	minutes	jsr	numtoascii	SET16	lda	temp+2	clc	adc	#RED	;coloradd	sta	timeleft		SET8	lda	seconds	jsr	numtoascii	SET16	lda	temp	clc	adc	#RED	;coloradd	sta	timeleft+4	lda	temp+2	clc	adc	#RED	;coloradd	sta	timeleft+6			SET8		ldx	TSKcurrent		plb	rtl** build the energy beam*		temp has value to show*		a/y have beam address*buildbar:	sta	tmp				;address	sty	tmp+1		stz	temp+4			;bar pointer	stz	temp+5	ldy	#0				;beginning of bar** calculate how many solids to fill in*	lda	temp	lsr	a	lsr	a	lsr	a	sta	temp+5			;how many solids		lda	temp	and	#7	sta	temp			;and a partial** now do the solids*@done:	lda	temp+5	beq	@littleguy	asl	a	sta	temp+5@filloop:	lda	#63				sta	(tmp),y	iny	lda	coloradd		sta	(tmp),y	iny	cpy	temp+5	bcc	@filloop** and the partial block*@littleguy:	lda	temp	beq	cbarloop	clc	adc	#55	sta	(tmp),y	iny	lda	coloradd		sta	(tmp),y	iny	bra	cbarloop	** and clear the rest of the bar*clearbar:			;clear the bar thingy	sta	tmp	sty	tmp+1	ldy	#0cbarloop:	cpy	barsize	bcc	@fine	rts@fine:	lda	#55	sta	(tmp),y	iny	lda	#1	sta	(tmp),y	iny	cpy	barsize	bcc	cbarloop	rts** number to 2 digit ascii*		acc has number*		temp/temp+1 set on output*numtoascii:	ldy	#0			;repeated subtraction@loop:	cmp	#10	bcc	@done	sec		sbc	#10	iny	jmp	@loop@done:	iny	sty	temp	inc	a	sta	temp+2		lda	temp	clc	adc	#15		;15	-> 106		sta	temp	lda	temp+2		clc	adc	#15		;15 ->106	sta	temp+2		stz	temp+1		;clear high	stz	temp+3	rts	** see if bob has current weapon*	if temp 0 -> no update weapon*	if temp 1 -> select next weapon*doweaponcount:	phb	lda	#16	pla		phb	** weapons*	lda	weapon	bmi	@stillactive2	tay@getnextweapon:	lda	weaponcount,y	beq	@keepgoing2	sty	weapon	bra	@stillactive2@keepgoing2:	iny	cpy	#6	bne	@nowrap2	ldy	#0@nowrap2:	cpy	weapon	bne	@getnextweapon	jsr	checkflyingweapons	bcs	@stillactive2	lda	#-1	sta	weapon** remotes*@stillactive2:	lda	remote	bmi	@stillactive	tay@getnextremote:	lda	remotecount,y	beq	@keepgoing	sty	remote	plb	rtl@keepgoing:	iny	cpy	#6	bne	@nowrap	ldy	#0@nowrap:	cpy	remote	bne	@getnextremote@nothing:	lda	#-1	sta	remote@stillactive:	plb	rtl		** activate any dead weapon systems*activatedead:	phb	lda	#16	pha	plb	** look for any weapons*	lda	weapon	bpl	@countcheck	ldy	#0@wloop:	lda	weaponcount,y	bne	@hasit33	iny@notuzi:	cpy	#6	bcc	@wloop	jsr	checkflyingweapons	bcs	@seeremote	lda	#-1	sta	weapon	bra	@seeremote@hasit33: 	sty	weapon** if no bullets in current weapon then see if weapon below* has anything*@countcheck:	stz	temp+1			;check flag	lda	weapon			;if first gun	cmp	#-1	bne	@setit	lda	#5				@setit:	sta	temp	tay	lda	weaponcount,y	bne	@seeremote@checkloop:	lda	temp+1	beq	@down@up:	lda	temp	inc	a	cmp	#6	bcc	@nowrapper	jsr	checkflyingweapons	bcs	@seeremote	lda	#-1	sta	weapon		bra	@seeremote@down:	lda	temp	dec	a	cmp	#-1	bne	@nowrapper	lda	weapon	cmp	#-1	bne	@setit2	lda	#5@setit2:	sta	temp	inc	temp+1	bra	@checkloop@nowrapper:		sta	temp	tay	lda	weaponcount,y	beq	@checkloop	sty	temp		jsr	checkflyingweapons	bcs	@seeremote	lda	temp	sta	weapon;	jmp	@seeremote;@next:;	bne	@checkloop** look for remotes*@seeremote:	lda	remote	bpl	@countcheck2@try:	ldy	#0@uloop:	lda	remotecount,y	bne	@hasit2	iny		cpy	#6	bcc	@uloop	lda	#-1	sta	remote	plb	rtl@hasit2: 	sty	remote	plb	rtl	** if no remotes....kill*@countcheck2:	ldy	#0@uloop2:	lda	remotecount,y	bne	@vomit	iny	cpy	#6	bne @uloop2	lda	#-1	sta	remote@vomit:	plb	rtl		** check for any active flying weapons*checkflyingweapons:	ldy	#21@loop:	lda	TSKflags,y	bmi	@wait	iny		cpy	#24	bcc	@loop	clc	rts@wait:	sec	rts	ultraforceanim: dw $ff00,$ff00,$f500,$ec04,$e,$f4f0,$1b,$ff0,$ff01,$0,$0,$0 dw $e,$311f,$ff0,$19,$1d,$f7,$9bf,$1008,$f3f8,$1b03,$ff00,$fffd dw $0,$8,$40,$f800,$300,$fc70,$1820,$1025,$82b,$c380,$3e03,$c063 dw $16,$1041,$0,$2280,$2020,$130,$f307,$bff0,$e000,$201f,$6128,$6e07 dw $4000,$ff10,$f4f4,$6400,$1110,$ff00,$e68,$0,$bff,$14,$17e0,$600 dw $2018,$100,$1,$fa00,$a691,$af00,$2e50,$8,$feff,$5020,$f048,$42 dw $202,$9b,$f700,$e908,$1820,$8a6,$3843,$6207,$f800,$20f8,$1c08,$4fb dw $2080,$1420,$6508,$30,$ff,$f506,$e219,$c43c,$f0c8,$1000,$fff,$f00f dw $0,$6,$1100,$200e,$c01f,$103f,$ef60,$e,$28e0,$7fc0,$8170,$c081 dw $902,$18e0,$c0,$8070,$7e81,$de,$b51,$e101,$3020,$946,$102e,$3920 dw $20f,$c0c7,$ff,$7f8,$2920,$100f,$c000,$3f,$fd19,$fd,$4500,$862f dw $c001,$1b3f,$1100,$2,$ac61,$992,$20fe,$e011,$1120,$591f,$fffc,$7f21 dw $6e7f,$ff09,$fd00,$2002,$e419,$8e6,$413e,$162,$bebe,$920,$1fe,$2050 dw $2120,$41,$f951,$ed09,$26,$4cdb,$98a7,$4886,$40e0,$80,$909,$2006 dw $401f,$803f,$7f40,$39e0,$407f,$20bf,$8cf,$3f02,$fc27,$3f18,$20c0,$400a dw $8001,$c020,$f008,$d827,$3a00,$fa01,$f602,$f807,$dfa,$38ff,$719,$f00 dw $ec,$4220,$7f7f,$101e,$20b0,$7f31,$8b3,$1a42,$80ff,$180,$22,$a0f7 dw $0,$efff,$1274,$847f,$4202,$ff0f,$fefe,$9de,$7f8,$802c,$cc7f,$8 dw $10d2,$4a23,$8181,$fe91,$1f09,$38e0,$18,$7eff,$6240,$42ba,$4009,$1260 dw $2a00,$595f,$e2ff,$dd02,$5001,$88ac,$4f8f,$40e0,$46,$800,$2100,$7300 dw $2b50,$4088,$fe77,$9,$fbff,$f708,$10,$af,$203f,$888f,$273f,$ff00 dw $18,$8ff,$1004,$308,$d000,$c020,$7088,$3100,$1a40,$480c,$90f0,$34ff dw $400b,$4022,$203f,$6f90,$4a40,$7777,$808f,$4cf3,$400c,$773a,$6288,$9419 dw $7d0a,$8a7d,$ac0,$807f,$c004,$8222,$4302,$cf3f,$1100,$11b,$bf00,$c5 dw $8900,$114e,$1340,$ecc0,$200a,$ff6a,$bfff,$bf,$4500,$e6f4,$303,$d8fc dw $1360,$5f40,$462,$bf,$fb,$5dfd,$cf02,$180f,$fc,$2a07,$e003,$2c03 dw $600,$e022,$0,$ef19,$df00,$19c0,$803,$c0c7,$1fe,$2b4,$1c,$9032 dw $c24,$8003,$22c0,$f300,$da12,$4c00,$98b7,$304f,$900c,$26c1,$bf80,$440 dw $c12,$3a3e,$2420,$80,$407f,$1f9f,$4078,$30ff,$8051,$1460,$4280,$1f02 dw $40e0,$1459,$d4a1,$1f0a,$416,$ff,$20df,$89a,$14c4,$28,$ff3a,$40ff dw $472,$ff,$ef28,$e010,$bf2b,$5422,$8080,$2e00,$5f00,$cc6,$200a,$3e1c dw $4b4a,$2f0c,$2f38,$e000,$be08,$3804,$8,$d0ff,$88,$7f72,$ef00,$362 dw $3f3f,$63ff,$a000,$bd18,$1004,$100,$2ec,$14e0,$e940,$37e,$415f,$e6ce dw $4102,$bf20,$6601,$2,$1600,$100,$10c,$6e0,$20f1,$1e1d,$fe09,$100 dw $4074,$22b2,$3c3c,$c683,$c,$20,$84,$40cf,$22af,$dd11,$c33c,$1140 dw $db08,$d310,$1003,$3f80,$2020,$6002,$7f80,$808,$1010,$224,$51e,$c020 dw $6790,$6f,$a01d,$728,$e0f8,$a01b,$2258,$ff2c,$1c02,$1d6f,$4c22,$d42 dw $ce0,$a22,$2d00,$4ce0,$14c4,$2012,$8012,$1f7f,$a300,$1ff,$fe01,$fc03 dw $ff04,$ff9,$b84,$180,$106,$200,$401,$f903,$640,$25e0,$5f60,$2f90 dw $47cc,$8708,$808,$12ff,$b,$60,$1000,$ce0,$7f0,$8f8,$c0f7,$e24 dw $e40,$63ef,$889e,$fb,$7e08,$c17e,$203e,$631d,$8810,$6104,$400,$817e dw $2620,$f704,$601,$81fd,$20ff,$707,$1d40,$401,$600,$8108,$2002,$a6c dw $59ff,$e20e,$de24,$a018,$167b,$7220,$6,$439,$fa4d,$2820,$2842,$6820 dw $10f4,$56e,$de3f,$306,$80,$f794,$eb00,$de00,$fd02,$550,$8ef,$40 dw $80f,$1c00,$3402,$531,$54e,$f02,$1cfe,$fb03,$40,$28bb,$17d7,$88a8 dw $7077,$5f20,$1d80,$4009,$2804,$1744,$2805,$5788,$8f70,$1f00,$40f7,$350b dw $f0f8,$72a,$1140,$2480,$207,$1673,$20ce,$8037,$7f0a,$7f,$b245,$206 dw $f81d,$ff1e,$3f3f,$182b,$1eda,$66b,$7200,$f07,$8007,$e000,$1532,$1f6f dw $934,$4a20,$ef05,$ef,$1f00,$4220,$4010,$954,$fdfd,$c0c0,$e60,$7f8 dw $1d40,$264,$454,$3f63,$fc02,$2,$6fc,$f80f,$f00e,$66fc,$690c,$d30c dw $933e,$405,$6bab,$6bab,$2a3,$ab00,$63,$77b6,$3ed1,$18a8,$7f1c,$2c0 dw $400,$810,$7f,$77f,$107f,$f007,$203,$300,$11f0,$3e0,$e011,$8e9 dw $f68f,$6ab,$2,$680,$818,$6f6,$b0f8,$a07f,$283,$8000,$c07f,$7f3f dw $ea6,$35f6,$15c0,$d31e,$108,$fe00,$ea0d,$8,$1492,$4a2e,$e494,$6454 dw $6480,$fe07,$f10c,$ff0d,$ef19,$900,$3f7,$83ff,$a0ff,$60,$803e,$1867 dw $3c5b,$3cdb,$e701,$ff18,$7e00,$1f00,$147,$bf80,$634f,$317c,$193e,$81e dw $e00,$e8d,$f0c,$1f1c,$a18,$801f,$c0fe,$728,$2f0,$f000,$30c0,$3207 dw $c00f,$f140,$eb30,$68,$5a4e,$2137,$173b,$42c,$e480,$3f01,$8f30,$b778 dw $b16a,$2100,$10ce,$3ef,$c6ff,$6e,$4f63,$d799,$d39c,$9016,$3b01,$be18 dw $ff36,$81c1,$740,$1020,$2ef,$ef00,$e718,$c136,$c141,$409,$0,$c3c3 dw $c37f,$e804,$ffd,$7c4,$7b2,$f53c,$c037,$393f,$3e00,$7e70,$fce2,$f008 dw $8340,$6c4,$ff,$3e3,$80c0,$4407,$39,$fc03,$229,$22,$767,$6b00 dw $ec0f,$da0b,$bd18,$1824,$c1ff,$a607,$4605,$f706,$f708,$1803,$24e7,$c1c3 dw $8000,$459,$900f,$4980,$100,$2980,$7ea1,$38d8,$400f,$3cc0,$8000,$7c29 dw $c809,$8009,$f29,$8e9,$f6cf,$90c,$497c,$90c,$6180,$96e0,$9522,$532f dw $3c0c,$d51a,$e510,$2c00,$1099,$4829,$e888,$48,$fe58,$1901,$1be3,$33ff dw $df10,$ef17,$8aa,$ff87,$7e,$c700,$bb38,$bb7c,$c77c,$e038,$ce8,$486 dw $677e,$1e19,$1e18,$1b0d,$8c0e,$7e0f,$209,$1f00,$974,$397e,$e000,$7fff dw $f83f,$7518,$34,$2ca5,$129a,$99f,$793,$1000,$3f04,$1880,$3cc7,$2db dw $db34,$e512,$f609,$120,$ff,$5cc4,$6e76,$efb3,$e7a9,$1500,$3690,$bd10 dw $ff3c,$6c3,$ff83,$dfa1,$220,$8400,$3c09,$c321,$4fc3,$5,$8100,$b881 dw $b817,$7e6,$c387,$e20f,$5e07,$802e,$397f,$3e20,$8071,$8c01,$60f0,$380 dw $8080,$1591,$3606,$3304,$7307,$700,$bec,$8ea,$14dd,$38ff,$3e1,$74 dw $fd8,$982,$e314,$8ce1,$5180,$100,$f6fc,$be23,$12e,$8003,$2300,$d07c dw $4030,$80c0,$4780,$80fc,$21,$f7f,$17e,$e6a,$1b00,$f700,$e704,$31fb dw $183e,$611f,$430c,$205,$40b,$3fa,$88fc,$8e1a,$3b00,$80ff,$f4c0,$bc23 dw $7b28,$c007,$f900,$29b4,$cb20,$bb50,$28,$89b,$5013,$d091,$3818,$b300 dw $3747,$67ff,$27bf,$58df,$fa07,$f06,$180,$397e,$ff,$c1fc,$65d,$6fdf dw $f8e,$786,$2c7,$0,$787,$f8f,$f0e,$1f1e,$f078,$552,$2,$558 dw $1b02,$8f7f,$3c,$5a8c,$529a,$c96,$fc8,$c500,$c309,$824a,$e00f,$c dw $1ee3,$1aed,$8ed,$5f3,$fa40,$5f9,$8cff,$663c,$e75e,$df00,$cff1,$c15a dw $202c,$bb,$ff38,$83c7,$c1ff,$40bf,$280,$4000,$20bf,$38df,$c7c7,$f95 dw $8717,$8087,$8f29,$1180,$8078,$2141,$3f3c,$86a,$f884,$c020,$fc4,$f010 dw $c000,$5140,$ff00,$8009,$9a00,$9902,$1903,$3803,$103,$476,$ced,$f1ff dw $7403,$8300,$1f3a,$fb04,$f30c,$80f1,$80f9,$fff9,$f980,$f980,$f980,$f980 dw $f980,$f980,$f980,$f980,$80ff,$80f9,$80a1,$80fc,$80fc,$80fc,$80fc,$80fc dw $fffc,$fc80,$fc80,$fc80,$fc80,$fc80,$ff80,$ff80,$ff80,$80ff,$80ff,$80ff dw $80ff,$80ff,$80ff,$80ff,$80ff,$ffff,$9f80,$f980,$f980,$f980,$f980,$f980 dw $f980,$f980,$80ff,$80f9,$80f9,$80f9,$f9,$fb,$fb,$fb,$fffb,$fb00 dw $fb00,$fb00,$fb00,$fb00,$fb00,$fb00,$1b00,$1000,$808,$c04,$e03,$800 dw $50b,$60e,$808,$f07,$103,$7,$7,$203,$807,$18,$4038,$c030 dw $8070,$4070,$5000,$b080,$d0c0,$7000,$40,$f080,$e000,$e000,$8040,$6c0 dw $808,$1708,$1c09,$1e0e,$8007,$2840,$6,$f06,$f07,$1000,$f,$4007 dw $6828,$9880,$9e0,$e8,$6070,$1840,$4060,$6a3,$2a8,$6000,$3040,$6905 dw $600,$301,$4e,$2808,$301,$d,$7,$2808,$1e0,$2080,$e040,$4000 dw $800,$2f28,$c000,$7c7,$4bc0,$806,$4020,$40f8,$1df8,$106,$6,$8031 dw $20,$729,$1880,$605a,$2900,$8060,$18,$6029,$3100,$20a,$a03,$e04 dw $806,$3100,$8400,$140,$703,$707,$2900,$a070,$9006,$70c0,$3040,$3100 dw $7b0,$6ae0,$280,$8000,$f19,$2100,$8006,$729,$88ff,$8028,$7519,$8801 dw $8020,$8419,$8801,$b820,$ef29,$2988,$29b8,$2188,$b803,$8829,$4921,$c001 dw $df21,$1188,$2840,$8006,$f831,$8829,$b829,$8029,$f531,$2840,$f980,$f9c0 dw $71c0,$6,$36a,$5a00,$40e0,$2,$c052,$438,$403,$a00,$80c3,$b801 dw $2a,$303,$8003,$c009,$f30,$6000,$3080,$980,$30c0,$24a,$7180,$353 dw $6980,$8001,$4059,$8000,$4059,$fff2,$20c0,$3240,$20c0,$f340,$3380,$29b8 dw $5b40,$3b80,$40ff,$40fb,$80fb,$80fb,$80fb,$c029,$802b,$c029,$ff33,$2980 dw $33c0,$f980,$f980,$fa40,$fa40,$fb40,$fb40,$40ff,$40fb,$fb,$80fd,$80f9 dw $80f9,$f9,$80fb,$ffb9,$fdc0,$fd80,$fb40,$fb40,$fb40,$fe80,$fe80,$fb00 dw $ff,$80fb,$80fc,$40fc,$40ff,$80ff,$40fd,$80fb,$fffe,$fe80,$fe80,$9e80 dw $fc80,$cc80,$3d80,$2780,$35c0,$80ff,$801f,$803d,$801f,$fd,$40ff,$40ff dw $80ff,$fffe,$fe80,$fe80,$fe80,$fe00,$e980,$2f08,$2f80,$2708,$755,$2180 dw $860,$6027,$1f80,$8060,$7f25,$8060,$80fd,$40fd,$40ff,$80ff,$80fe,$80fe dw $fffe,$c680,$2f80,$2ec0,$2f80,$3680,$2f80,$3680,$1f80eultraforceanim: